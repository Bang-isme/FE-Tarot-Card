{"version":3,"file":"static/js/810.36e46f73.chunk.js","mappings":"sLAMA,MAAMA,GAAkBC,EAAAA,EAAAA,OAAKC,IAAA,IAAC,KAAEC,EAAI,SAAEC,EAAQ,QAAEC,EAAO,KAAEC,EAAI,YAAEC,GAAaL,EAAA,OAC1EM,EAAAA,EAAAA,KAAA,OACEC,UAAW,oEACTL,EACE,gFACA,6EACJC,QAASA,IAAMA,EAAQF,EAAKO,IAAIC,UAEhCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBE,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4EAA2EE,UACxFH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUE,SAAEL,OAE9BM,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wDAAuDE,SAAER,EAAKU,QAC5EL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,0CAAyCE,SAAEJ,WAGxD,IAUFO,GAAmBb,EAAAA,EAAAA,OAAKc,IAAwD,IAAvD,QAAEC,EAAO,aAAEC,EAAe,GAAE,UAAEC,GAAY,GAAOH,EAC9E,MAAMI,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,eAC1CC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,WAAS,IAC9CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAU7BO,EAAQb,EAAac,OAAS,EAAId,EAPZ,CAC1B,CAAEP,GAAI,aAAcG,KAAM,2BAAiBmB,MAAO,EAAGzB,YAAa,iEAClE,CAAEG,GAAI,eAAgBG,KAAM,eAAgBmB,MAAO,GAAIzB,YAAa,oDACpE,CAAEG,GAAI,OAAQG,KAAM,iBAAYmB,MAAO,EAAGzB,YAAa,oEACvD,CAAEG,GAAI,SAAUG,KAAM,sBAAamB,MAAO,EAAGzB,YAAa,sEA8F5D,OACEC,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxB/B,UAAU,2BAA0BE,UAEpCC,EAAAA,EAAAA,MAAA,QAAM6B,SApFYC,IAIpB,GAHAA,EAAEC,kBAGGtB,EAEH,YADAQ,EAAS,oDAIXA,EAAS,IAGT,MAAMe,EAAsBd,EAAMe,MAAK1C,GAAQA,EAAKO,KAAOW,IAE3D,IAAKuB,EAEH,YADAf,EAAS,wDAKX,MAAMiB,EAAc,CAClBC,YAAa1B,EACbG,SAAUA,EAASwB,OACnBC,SAAUL,EAAoBZ,OAAS,GAIzC,IACEb,GAAS+B,EAAAA,EAAAA,IAAeJ,IAGpB9B,GACFA,EAAQ8B,EAEZ,CAAE,MAAOlB,GACPuB,QAAQvB,MAAM,qDAA+BA,GAC7CC,EAAS,0GACX,GA+CgCpB,UAAU,mFAAkFE,SAAA,EACxHC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAME,SAAA,EACnBH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDE,SAAC,4BAClEH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BAA8BE,SAAC,+JAK7CiB,IACCpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8EAA6EE,UAC1FH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BAA8BE,SAAEiB,OAIjDhB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAME,SAAA,EACnBH,EAAAA,EAAAA,KAAA,SAAOC,UAAU,mDAAkDE,SAAC,0CACpEH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCE,SACnDmB,EAAMsB,KAAKjD,IACVK,EAAAA,EAAAA,KAAA,OAEEH,QAASA,IAAMiB,EAAgBnB,EAAKO,IACpCD,UAAW,2GAEPY,IAAiBlB,EAAKO,GACpB,6CACA,wEACJC,UAEFC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBE,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OAAKC,UAAW,qCAAoCY,IAAiBlB,EAAKO,GAAK,gCAAkC,kCAAmCC,SACjJU,IAAiBlB,EAAKO,KACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAGnBG,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCE,SAAER,EAAKU,QAC3DL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uCAAsCE,SAAER,EAAKI,qBAjBzDJ,EAAKO,YAyBlBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAME,UACnBC,EAAAA,EAAAA,MAAA,UACET,KAAK,SACLE,QA1FegD,KACvB,IAAKhC,EAEH,YADAQ,EAAS,oDAIXA,EAAS,IAGT,MAAMe,EAAsBd,EAAMe,MAAK1C,GAAQA,EAAKO,KAAOW,IAE3D,IAAKuB,EAEH,YADAf,EAAS,wDAKX,MAAMiB,EAAc,CAClBC,YAAa1B,EACb4B,SAAUL,EAAoBZ,OAAS,GAIzC,IACEb,GAAS+B,EAAAA,EAAAA,IAAeJ,IAGpB9B,GACFA,EAAQ8B,EAEZ,CAAE,MAAOlB,GACPuB,QAAQvB,MAAM,qDAA+BA,GAC7CC,EAAS,0GACX,GA0DQyB,SAAUpC,EACVT,UAAU,0EAAyEE,SAAA,EAEnFH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAME,SAAEO,EAAY,6BAAkB,2BACtDV,EAAAA,EAAAA,KAAA,OACE+C,MAAM,6BACN9C,UAAW,8CAA6CS,EAAY,eAAiB,IACrFsC,KAAK,OACLC,QAAQ,YACRC,OAAO,eAAc/C,UAErBH,EAAAA,EAAAA,KAAA,QAAMmD,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,4HAK3EtD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAME,UACnBC,EAAAA,EAAAA,MAAA,UACET,KAAK,SACLE,QAASA,IAAMsB,GAAmBD,GAClCjB,UAAU,0EAAyEE,SAAA,EAEnFH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAME,SAAEe,EAAiB,0BAAe,wDACxDlB,EAAAA,EAAAA,KAAA,OACE+C,MAAM,6BACN9C,UAAW,8CAA6CiB,EAAiB,aAAe,IACxF8B,KAAK,OACLC,QAAQ,YACRC,OAAO,eAAc/C,UAErBH,EAAAA,EAAAA,KAAA,QAAMmD,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,0BAK1EpC,IACCd,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAG2B,OAAQ,GAC/BzB,QAAS,CAAEF,QAAS,EAAG2B,OAAQ,QAC/BC,KAAM,CAAE5B,QAAS,EAAG2B,OAAQ,GAC5BxB,WAAY,CAAEC,SAAU,IACxB/B,UAAU,OAAME,SAAA,EAEhBH,EAAAA,EAAAA,KAAA,SAAOyD,QAAQ,WAAWxD,UAAU,mDAAkDE,SAAC,uCAGvFH,EAAAA,EAAAA,KAAA,YACEE,GAAG,WACHwD,MAAO1C,EACP2C,SAAWzB,GAAMjB,EAAYiB,EAAE0B,OAAOF,OACtCG,YAAY,mEACZ5D,UAAU,iLACV6D,KAAM,KAER9D,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4CAA2CE,SAAC,0LAM7DH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBE,SAClCe,IACClB,EAAAA,EAAAA,KAAA,UACEL,KAAK,SACLmD,UAAW9B,EAASwB,QAAU9B,EAC9BT,UAAW,kGAENe,EAASwB,OAER,4CADA,iEAEJrC,SAEDO,EAAY,6BAAkB,uDAKrCV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CE,SAAC,sOAIlD,IAiBjBX,EAAgBuE,UAAY,CAC1BpE,KAAMqE,IAAAA,MAAgB,CACpB9D,GAAI8D,IAAAA,OAAiBC,WACrB5D,KAAM2D,IAAAA,OAAiBC,aACtBA,WACHrE,SAAUoE,IAAAA,KAAeC,WACzBpE,QAASmE,IAAAA,KAAeC,WACxBnE,KAAMkE,IAAAA,OAAiBC,WACvBlE,YAAaiE,IAAAA,QAGf,S,8BCtSA,IAAIE,EAAuBC,EAAQ,MAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAI3E,KAAO,sBACL2E,CAPN,CAQF,CAEA,SAASE,IACP,OAAOT,CACT,CAHAA,EAAKR,WAAaQ,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASX,EACTY,QAASrB,EACTsB,YAAatB,EACbuB,WAAYd,EACZe,KAAMxB,EACNyB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAenB,UAAYmB,EAEpBA,CACT,C,wBCrDAZ,EAAOC,QAFoB,8C,6ECE3B,MAwBA,EAxBkB9E,IAAyC,IAAxC,SAAES,EAAQ,cAAEqG,GAAgB,GAAM9G,EAEnD,OAAI8G,GAEAxG,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,GACpBE,QAAS,CAAEF,QAAS,GACpB4B,KAAM,CAAE5B,QAAS,GACjBG,WAAY,CAAEC,SAAU,IAAM7B,UAE9BH,EAAAA,EAAAA,KAAA,QAAAG,SAAOA,OAMNH,EAAAA,EAAAA,KAAA,QAAAG,SAAOA,GAAgB,C,uHCjBhC,MAAMsG,UAAwBC,EAAAA,UAC1BC,uBAAAA,CAAwBC,GACpB,MAAMd,EAAUe,KAAKnC,MAAMoC,SAASC,QACpC,GAAIjB,GAAWc,EAAUI,YAAcH,KAAKnC,MAAMsC,UAAW,CACzD,MAAMC,EAASnB,EAAQoB,aACjBC,EAAcF,aAAkBG,aAAcH,EAAOI,aAAmB,EACxEC,EAAOT,KAAKnC,MAAM6C,QAAQR,QAChCO,EAAK/D,OAASuC,EAAQ0B,cAAgB,EACtCF,EAAKG,MAAQ3B,EAAQuB,aAAe,EACpCC,EAAKI,IAAM5B,EAAQ6B,UACnBL,EAAKM,KAAO9B,EAAQ+B,WACpBP,EAAKQ,MAAQX,EAAcG,EAAKG,MAAQH,EAAKM,IACjD,CACA,OAAO,IACX,CAIAG,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOnB,KAAKnC,MAAMvE,QACtB,EAEJ,SAAS8H,EAAQvI,GAAmC,IAAlC,SAAES,EAAQ,UAAE6G,EAAS,QAAEkB,GAASxI,EAC9C,MAAMQ,GAAKiI,EAAAA,EAAAA,SACLC,GAAMC,EAAAA,EAAAA,QAAO,MACbf,GAAOe,EAAAA,EAAAA,QAAO,CAChBZ,MAAO,EACPlE,OAAQ,EACRmE,IAAK,EACLE,KAAM,EACNE,MAAO,KAEL,MAAEQ,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAmC7B,OAzBAC,EAAAA,EAAAA,qBAAmB,KACf,MAAM,MAAEhB,EAAK,OAAElE,EAAM,IAAEmE,EAAG,KAAEE,EAAI,MAAEE,GAAUR,EAAKP,QACjD,GAAIC,IAAcoB,EAAIrB,UAAYU,IAAUlE,EACxC,OACJ,MAAMmF,EAAgB,SAAZR,EAAqB,SAASN,IAAS,UAAUE,IAC3DM,EAAIrB,QAAQ4B,QAAQC,YAAc1I,EAClC,MAAM2I,EAAQC,SAASC,cAAc,SAerC,OAdIT,IACAO,EAAMP,MAAQA,GAClBQ,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCACFjJ,yEAEZuH,wCACClE,gCACRmF,qCACKhB,0CAIJ,KACHoB,SAASE,KAAKI,YAAYP,EAAM,CACnC,GACF,CAAC7B,KACIqC,EAAAA,EAAAA,KAAI5C,EAAiB,CAAEO,UAAWA,EAAWF,SAAUsB,EAAKb,QAASD,EAAMnH,SAAUuG,EAAAA,aAAmBvG,EAAU,CAAEiI,SAChI,CCvEA,MAAMkB,EAAgB5J,IAAqG,IAApG,SAAES,EAAQ,QAAEwB,EAAO,UAAEqF,EAAS,eAAEuC,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,EAAI,QAAExB,GAAUxI,EAClH,MAAMiK,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/B3J,GAAKiI,EAAAA,EAAAA,SACL2B,GAAyBC,EAAAA,EAAAA,cAAaC,IACxCL,EAAiBM,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcP,EAAiBQ,SACtC,IAAKD,EACD,OAERX,GAAkBA,GAAgB,GACnC,CAACI,EAAkBJ,IAChBa,GAAUC,EAAAA,EAAAA,UAAQ,KAAM,CAC1BnK,KACAyB,UACAqF,YACAwC,SACAD,eAAgBO,EAChBQ,SAAWN,IACPL,EAAiBM,IAAID,GAAS,GACvB,IAAML,EAAiBY,OAAOP,OAQ7CP,EACM,CAACe,KAAKC,SAAUX,GAChB,CAAC9C,EAAW8C,IAiBlB,OAhBAO,EAAAA,EAAAA,UAAQ,KACJV,EAAiBe,SAAQ,CAACC,EAAGC,IAAQjB,EAAiBM,IAAIW,GAAK,IAAO,GACvE,CAAC5D,IAKJN,EAAAA,WAAgB,MACXM,IACI2C,EAAiBrC,MAClBiC,GACAA,GAAgB,GACrB,CAACvC,IACS,cAAT0C,IACAvJ,GAAYkJ,EAAAA,EAAAA,KAAIpB,EAAU,CAAEjB,UAAWA,EAAWkB,QAASA,EAAS/H,SAAUA,MAE1EkJ,EAAAA,EAAAA,KAAIwB,EAAAA,EAAgBC,SAAU,CAAEpH,MAAO0G,EAASjK,SAAUA,GAAW,EAEjF,SAAS0J,IACL,OAAO,IAAIkB,GACf,C,cCxDA,MAAMC,EAAeC,GAAUA,EAAML,KAAO,GAC5C,SAASM,EAAa/K,GAClB,MAAMgL,EAAW,GAMjB,OAJAC,EAAAA,SAASV,QAAQvK,GAAW8K,KACpBI,EAAAA,EAAAA,gBAAeJ,IACfE,EAASG,KAAKL,EAAM,IAErBE,CACX,CCgCA,MAAMI,EAAkB7L,IAA6I,IAA5I,SAAES,EAAQ,OAAEqJ,EAAM,QAAE7H,GAAU,EAAI,eAAE4H,EAAc,sBAAEE,GAAwB,EAAI,KAAEC,EAAO,OAAM,UAAE8B,GAAY,EAAK,QAAEtD,EAAU,QAASxI,EAC5J,MAAO+L,EAAiBC,IAAgBC,EAAAA,EAAAA,IAAYH,GAK9CI,GAAkBvB,EAAAA,EAAAA,UAAQ,IAAMa,EAAa/K,IAAW,CAACA,IAKzD0L,EAAcL,IAAcC,EAAkB,GAAKG,EAAgBhJ,IAAIoI,GAIvEc,GAAkBzD,EAAAA,EAAAA,SAAO,GAMzB0D,GAAyB1D,EAAAA,EAAAA,QAAOuD,GAIhCI,GAAepC,EAAAA,EAAAA,IAAY,IAAM,IAAImB,OAKpCkB,EAAgBC,IAAqBnL,EAAAA,EAAAA,UAAS6K,IAC9CO,EAAkBC,IAAuBrL,EAAAA,EAAAA,UAAS6K,IACzDS,EAAAA,EAAAA,IAA0B,KACtBP,EAAgB/E,SAAU,EAC1BgF,EAAuBhF,QAAU6E,EAIjC,IAAK,IAAIU,EAAI,EAAGA,EAAIH,EAAiB5K,OAAQ+K,IAAK,CAC9C,MAAM1B,EAAMI,EAAYmB,EAAiBG,IACpCT,EAAYU,SAAS3B,GAMtBoB,EAAazB,OAAOK,IALU,IAA1BoB,EAAaQ,IAAI5B,IACjBoB,EAAa/B,IAAIW,GAAK,EAMlC,IACD,CAACuB,EAAkBN,EAAYtK,OAAQsK,EAAYY,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAId,IAAoBK,EAAgB,CACpC,IAAIU,EAAe,IAAIf,GAKvB,IAAK,IAAIU,EAAI,EAAGA,EAAIH,EAAiB5K,OAAQ+K,IAAK,CAC9C,MAAMrB,EAAQkB,EAAiBG,GACzB1B,EAAMI,EAAYC,GACnBY,EAAYU,SAAS3B,KACtB+B,EAAaC,OAAON,EAAG,EAAGrB,GAC1ByB,EAAgBpB,KAAKL,GAE7B,CAcA,MATa,SAATvB,GAAmBgD,EAAgBnL,SACnCoL,EAAeD,GAEnBN,EAAoBlB,EAAayB,IACjCT,EAAkBN,GAKX,IACX,CAWA,MAAM,YAAEiB,IAAgBtE,EAAAA,EAAAA,YAAWuE,EAAAA,GACnC,OAAQzD,EAAAA,EAAAA,KAAI0D,EAAAA,SAAU,CAAE5M,SAAUgM,EAAiBvJ,KAAKqI,IAChD,MAAML,EAAMI,EAAYC,GAClBjE,IAAYwE,IAAcC,KAE1BG,IAAoBO,GAClBN,EAAYU,SAAS3B,IAoB7B,OAAQvB,EAAAA,EAAAA,KAAIC,EAAe,CAAEtC,UAAWA,EAAWrF,UAAUmK,EAAgB/E,UAAWpF,SAC9EqL,EACOxD,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAMH,eAAgBvC,OAAYgG,EArBxGC,KACX,IAAIjB,EAAakB,IAAItC,GAIjB,OAHAoB,EAAa/B,IAAIW,GAAK,GAK1B,IAAIuC,GAAsB,EAC1BnB,EAAatB,SAAS0C,IACbA,IACDD,GAAsB,EAAK,IAE/BA,IACgB,OAAhBN,QAAwC,IAAhBA,GAAkCA,IAC1DT,EAAoBL,EAAuBhF,SAC3CyE,IAA+B,OAAjBE,QAA0C,IAAjBA,GAAmCA,KAC1EnC,GAAkBA,IACtB,EAIuIrB,QAASA,EAAS/H,SAAU8K,GAASL,EAAI,KACnL,C,iBCjJXrG,EAAOC,QAAUL,EAAQ,KAARA,E,mICDnB,MAuMA,EAvMkBzE,IAQX,IARY,KACjB2N,EAAI,UACJC,GAAY,EAAK,QACjBzN,EAAO,aACP0N,GAAe,EAAK,WACpBC,GAAa,EAAK,cAClBC,EAAgB,KAAI,KACpBnG,EAAO,UACR5H,EACC,MAAOgO,EAAYC,IAAiB5M,EAAAA,EAAAA,WAAS,IACtC6M,EAAaC,IAAkB9M,EAAAA,EAAAA,UAASuM,IACxCQ,EAAYC,IAAiBhN,EAAAA,EAAAA,WAAS,IAG7CiN,EAAAA,EAAAA,YAAU,KAGND,EADEV,GAAQ,eAAgBA,EACZA,EAAKY,WAGLzD,KAAKC,SAAW,GAChC,GACC,CAAC4C,KAGJW,EAAAA,EAAAA,YAAU,KACRH,EAAeP,EAAU,GACxB,CAACA,IAqBJ,IAAKD,EACH,OACErN,EAAAA,EAAAA,KAAA,OACEC,UAAW,eACE,UAATqH,EAAmB,YAAuB,WAATA,EAAoB,YAAc,oJAGrEnH,UAEFH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDE,UAC7DH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gCAA+BE,SAAC,gDAaxD,OACEC,EAAAA,EAAAA,MAAA,OACEH,UAAW,aARK,CAClBiO,MAAO,YACPC,OAAQ,YACRC,MAAO,aAMW9G,6EAGZoG,EAAa,YAAc,eAC3BF,EAAa,kCAAoC,aAErDa,aAlDqBC,KACnBf,IAAiBC,GACnBG,GAAc,EAChB,EAgDEY,aA7CqBC,KACvBb,GAAc,EAAM,EA4CaxN,SAAA,EAG7BuN,GAAcF,KACdxN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wGAIjBG,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CACTzB,UAAU,yBACV0B,QAAS,CAAE8M,QAAS,GACpB3M,QAAS,CAAE2M,QAASb,EAAc,IAAM,GACxC7L,WAAY,CAAEC,SAAU,GAAK0M,KAAM,aACnC7F,MAAO,CACL8F,eAAgB,cAChBC,YAAa,UACbzO,SAAA,EAGFC,EAAAA,EAAAA,MAAA,OACEH,UAAW,0FAEN2N,EAA+C,GAAjC,6CAEnB/E,MAAO,CAAEgG,mBAAoB,UAAW1O,SAAA,EAExCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oEAGfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDE,UAChEH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8DAA6DE,UAC1EH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBE,SAAC,qCAK5CH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAGfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCE,UAC/CH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uJAKnBG,EAAAA,EAAAA,MAAA,OACEH,UAAW,oIAGP6N,EAAa,aAAe,iBAEhCjF,MAAO,CACLgG,mBAAoB,SACpBC,UAAW,mBACX3O,SAAA,CAEDkN,EAAK0B,UACJ3O,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yBAAwBE,SAAA,EACrCH,EAAAA,EAAAA,KAAA,OACEgP,IAAK3B,EAAK0B,SACVE,IAAK5B,EAAKhN,MAAQ,aAClBJ,UAAU,6BACViP,QAAUhN,IACRA,EAAE0B,OAAOuL,QAAU,KACnBjN,EAAE0B,OAAOoL,IAAM,uDAAuD,KAK1EhP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oEAGfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CE,UAC3DH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gDAA+CE,SACzDkN,EAAKhN,MAAQ,qBAKpBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+FAA8FE,UAC3GH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BE,SAAEkN,EAAKhN,MAAQ,iBAK3DmN,GAAgC,OAAlBC,IACbzN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4FAA2FE,UACxGH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+BAA8BE,SAAEsN,aAOxDzN,EAAAA,EAAAA,KAAA,OACEC,UAAU,uCACVJ,QAxIcuP,MACdvP,IAAY0N,GAAiBA,GAC/B1N,EAAQwN,EACV,EAsII,aAAYA,EAAKhN,MAAQ,iBAEvB,ECyZV,EA/kBoBX,IAKb,IALc,MACnB8B,EAAQ,GAAE,WACV6N,EAAa,aAAY,YACzBC,EAAW,kBACXC,EAAoB,MACrB7P,EACC,MAAO8P,EAAcC,IAAmB1O,EAAAA,EAAAA,UAAS,KAC1C2O,EAAeC,IAAoB5O,EAAAA,EAAAA,UAAS,KAC5C6O,EAAaC,IAAkB9O,EAAAA,EAAAA,UAAS,KACxC+O,EAAmBC,IAAwBhP,EAAAA,EAAAA,UAAS,IAGrDiP,EAAe,CACnBrO,QAAS,CACPC,QAAS,EACTC,EAAG,GACH4M,QAAS,GAEX3M,QAAUwK,IAAC,CACT1K,QAAS,EACTC,EAAG,EACHE,WAAY,CACVC,SAAU,GACViO,MAAW,IAAJ3D,KAGX9I,KAAM,CACJ5B,QAAS,EACTC,GAAI,GACJE,WAAY,CAAEC,SAAU,OAK5BgM,EAAAA,EAAAA,YAAU,KACR,IAAIkC,EAAY,GACZC,EAAQ,GACRpQ,EAAc,GAElB,OAAOsP,GACL,IAAK,aACHc,EAAQ,4BACRpQ,EAAc,mFACdmQ,EAAY,CACV,CAAE7P,KAAM,kBAAWN,YAAa,iHAChC,CAAEM,KAAM,qBAAYN,YAAa,mFACjC,CAAEM,KAAM,sBAAaN,YAAa,qIAEpC,MAEF,IAAK,eACHoQ,EAAQ,eACRpQ,EAAc,6HACdmQ,EAAY,CACV,CAAE7P,KAAM,wCAAuBN,YAAa,wEAC5C,CAAEM,KAAM,qBAAcN,YAAa,2DACnC,CAAEM,KAAM,kBAAWN,YAAa,yGAChC,CAAEM,KAAM,+BAAiBN,YAAa,4EACtC,CAAEM,KAAM,4CAA0BN,YAAa,8DAC/C,CAAEM,KAAM,sBAAaN,YAAa,4DAClC,CAAEM,KAAM,2BAAaN,YAAa,yGAClC,CAAEM,KAAM,gCAAoBN,YAAa,gEACzC,CAAEM,KAAM,qBAAcN,YAAa,2EACnC,CAAEM,KAAM,oBAAWN,YAAa,mEAElC,MAEF,IAAK,OACHoQ,EAAQ,kCACRpQ,EAAc,0GACdmQ,EAAY,CACV,CAAE7P,KAAM,WAAON,YAAa,0GAC5B,CAAEM,KAAM,iCAAcN,YAAa,oGACnC,CAAEM,KAAM,2CAAwBN,YAAa,wEAC7C,CAAEM,KAAM,qBAAcN,YAAa,mFACnC,CAAEM,KAAM,2BAAaN,YAAa,2DAClC,CAAEM,KAAM,wCAAqBN,YAAa,0FAE5C,MAEF,IAAK,SACHoQ,EAAQ,uCACRpQ,EAAc,4GACdmQ,EAAY,CACV,CAAE7P,KAAM,qBAAYN,YAAa,0EACjC,CAAEM,KAAM,qBAAcN,YAAa,yEACnC,CAAEM,KAAM,mBAAUN,YAAa,iFAC/B,CAAEM,KAAM,2BAAaN,YAAa,sEAClC,CAAEM,KAAM,8CAAsBN,YAAa,2DAC3C,CAAEM,KAAM,wCAAqBN,YAAa,oKAE5C,MAEF,QACEmQ,EAAY,GAGhBP,EAAiBO,GACjBL,EAAeM,GACfJ,EAAqBhQ,EAAY,GAChC,CAACsP,KAGJrB,EAAAA,EAAAA,YAAU,KACR,GAAIoC,MAAMC,QAAQ7O,IAAUA,EAAMD,OAAS,EAAG,CAE5C,MAAM+O,EAAaF,MAAM5O,EAAMD,QAAQyB,MAAK,GAC5CyM,EAAgBa,GAGhB,MAAMC,EAAeC,aAAY,KAC/Bf,GAAgBgB,IACd,MAAMC,EAAYD,EAAKE,WAAUC,IAAYA,IAC7C,IAAmB,IAAfF,EAAkB,CACpB,MAAMG,EAAW,IAAIJ,GAErB,OADAI,EAASH,IAAa,EACfG,CACT,CAEA,OADAC,cAAcP,GACPE,CAAI,GACX,GACD,KAEH,MAAO,IAAMK,cAAcP,EAC7B,IACC,CAAC/O,IAGJ,MAAMuP,EAAkBA,CAAC1D,EAAM2D,KACzB1B,GACFA,EAAYjC,EAAM2D,EACpB,EA+aF,OACEhR,EAAAA,EAAAA,KAACuL,EAAAA,EAAe,CAAApL,UACdC,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,GACpBE,QAAS,CAAEF,QAAS,GACpB4B,KAAM,CAAE5B,QAAS,GACjBG,WAAY,CAAEC,SAAU,IACxB/B,UAAU,2BAA0BE,SAAA,EAEpCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+CAA8CE,SAAEyP,KAC9D5P,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BAA8BE,SAAE2P,QAG/C9P,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUE,SAzbP8Q,MAAO,IAADC,EAAAC,EAC5B,IAAK3P,GAA0B,IAAjBA,EAAMD,OAClB,OACEvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCE,UACpDH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBE,SAAC,wEAK3C,OAAOkP,GACL,IAAK,aACH,OACErP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BE,UACvCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CE,SACzD,CAAC,EAAG,EAAG,GAAGyC,KAAIoO,IAAK,IAAAI,EAAAC,EAAAC,EAAAC,EAAA,OAClB/P,EAAMwP,IACJ5Q,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CAET8H,OAAQwH,EACRQ,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OACLvD,UAAU,6BAA4BE,SAAA,EAEtCH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAMwP,GACZ1D,UAAWkC,EAAawB,GACxBnR,QAASA,IAAMkR,EAAgBvP,EAAMwP,GAAQA,GAC7CxD,WAAY+B,IAAsByB,EAClC1J,KAAK,YAEPlH,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCE,SAAsB,QAAtBiR,EAAE1B,EAAcsB,UAAM,IAAAI,OAAA,EAApBA,EAAsB/Q,QACrEL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sCAAqCE,SAAsB,QAAtBkR,EAAE3B,EAAcsB,UAAM,IAAAK,OAAA,EAApBA,EAAsBtR,mBAjBvEiR,IAqBP5Q,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CAET8H,OAAQwH,EACRQ,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OACLvD,UAAU,6BAA4BE,SAAA,EAEtCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+FAA8FE,UAC3GH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBE,SAAC,mCAE1CC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCE,SAAsB,QAAtBmR,EAAE5B,EAAcsB,UAAM,IAAAM,OAAA,EAApBA,EAAsBjR,QACrEL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sCAAqCE,SAAsB,QAAtBoR,EAAE7B,EAAcsB,UAAM,IAAAO,OAAA,EAApBA,EAAsBxR,mBAbvEiR,EAgBR,QAMX,IAAK,eAEH,OACE5Q,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qEAAoEE,SAAA,EAEjFH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sFAAqFE,SACjGqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAMbtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sFAAqFE,SACjGqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OACLvD,UAAU,YAAWE,UAErBH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAMbtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFE,SAC5FqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAMbtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFE,SAC5FqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAMbtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFE,SAC5FqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAMbtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFE,SAC5FqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAObtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFE,SAC5FqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAMbtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFE,SAC5FqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAMbtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFE,SAC5FqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAMbtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFE,SAC5FqB,EAAM,KACLxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OAAMrD,UAEXH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,eAObtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+DAA8DE,UAC3EH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wDAAuDE,SACnEuP,EAAc9M,KAAI,CAAC8O,EAAUV,KAC5BhR,EAAAA,EAAAA,KAAA,OAEEC,UAAW,kEACTsP,IAAsByB,EAClB,6BACA,8CAENnR,QAASA,IAAMkR,EAAgBvP,EAAMwP,GAAQA,GAAO7Q,SAEnDuR,EAASrR,MARL2Q,YAgBnB,IAAK,OAEH,OACE5Q,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uCAAsCE,SAAA,EACnDH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CE,SAC1D,CAAC,EAAG,GAAGyC,KAAIoO,IAAK,IAAAW,EAAAC,EAAA,OACfxR,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CAET8H,OAAQwH,EACRQ,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OACLvD,UAAU,6BAA4BE,SAAA,EAEtCH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAMwP,GACZ1D,UAAWkC,EAAawB,GACxBnR,QAASA,IAAMkR,EAAgBvP,EAAMwP,GAAQA,GAC7CxD,WAAY+B,IAAsByB,EAClC1J,KAAK,YAEPlH,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCE,SAAsB,QAAtBwR,EAAEjC,EAAcsB,UAAM,IAAAW,OAAA,EAApBA,EAAsBtR,QACrEL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sCAAqCE,SAAsB,QAAtByR,EAAElC,EAAcsB,UAAM,IAAAY,OAAA,EAApBA,EAAsB7R,mBAjBvEiR,EAmBM,OAIjBhR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDE,SAC5D,CAAC,EAAG,EAAG,EAAG,GAAGyC,KAAIoO,IAAK,IAAAa,EAAAC,EAAA,OACrB1R,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CAET8H,OAAQwH,EACRQ,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OACLvD,UAAU,6BAA4BE,SAAA,EAEtCH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAMwP,GACZ1D,UAAWkC,EAAawB,GACxBnR,QAASA,IAAMkR,EAAgBvP,EAAMwP,GAAQA,GAC7CxD,WAAY+B,IAAsByB,EAClC1J,KAAK,WAEPlH,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCE,SAAsB,QAAtB0R,EAAEnC,EAAcsB,UAAM,IAAAa,OAAA,EAApBA,EAAsBxR,QACrEL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sCAAqCE,SAAsB,QAAtB2R,EAAEpC,EAAcsB,UAAM,IAAAc,OAAA,EAApBA,EAAsB/R,mBAjBvEiR,EAmBM,SAMvB,IAAK,SAEH,OACE5Q,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uCAAsCE,SAAA,EACnDC,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CACT8H,OAAQ,EACRgI,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OACLvD,UAAU,6BAA4BE,SAAA,EAEtCH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM,GACZ8L,UAAWkC,EAAa,GACxB3P,QAASA,IAAMkR,EAAgBvP,EAAM,GAAI,GACzCgM,WAAkC,IAAtB+B,EACZjI,KAAK,YAEPlH,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCE,SAAkB,QAAlB+Q,EAAExB,EAAc,UAAE,IAAAwB,OAAA,EAAhBA,EAAkB7Q,QACjEL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sCAAqCE,SAAkB,QAAlBgR,EAAEzB,EAAc,UAAE,IAAAyB,OAAA,EAAhBA,EAAkBpR,qBAI1EC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gEAA+DE,SAC3E,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGyC,KAAIoO,IAAK,IAAAe,EAAAC,EAAA,OACxB5R,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CAET8H,OAAQwH,EACRQ,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OACLvD,UAAU,6BAA4BE,SAAA,EAEtCH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAMwP,GACZ1D,UAAWkC,EAAawB,GACxBnR,QAASA,IAAMkR,EAAgBvP,EAAMwP,GAAQA,GAC7CxD,WAAY+B,IAAsByB,EAClC1J,KAAK,WAEPlH,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBE,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCE,SAAsB,QAAtB4R,EAAErC,EAAcsB,UAAM,IAAAe,OAAA,EAApBA,EAAsB1R,QACrEL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sCAAqCE,SAAsB,QAAtB6R,EAAEtC,EAAcsB,UAAM,IAAAgB,OAAA,EAApBA,EAAsBjS,mBAjBvEiR,EAmBM,SAMvB,QACE,OACEhR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0CAAyCE,SACrDqB,EAAMoB,KAAI,CAACyK,EAAM2D,KAChBhR,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CAET8H,OAAQwH,EACRQ,SAAUxB,EACVrO,QAAQ,UACRG,QAAQ,UACR0B,KAAK,OACLvD,UAAU,MAAKE,UAEfH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAMA,EACNC,UAAWkC,EAAawB,GACxBnR,QAASA,IAAMkR,EAAgB1D,EAAM2D,GACrCxD,WAAY+B,IAAsByB,EAClC1J,KAAK,WAbF0J,OAmBjB,EAkBOC,SAGW,EC7ctB,EAxH2BvR,IAAmD,IAAlD,MAAE8B,EAAQ,GAAE,WAAE6N,EAAU,SAAErO,EAAQ,OAAEiR,GAAQvS,EAEtE,MAAMwS,EAAkBD,GAAUA,EAAOE,MAAM,MAAMvP,KAAI,CAACwP,EAAMpB,KAC9D5Q,EAAAA,EAAAA,MAACsG,EAAAA,SAAc,CAAAvG,SAAA,CACZiS,GACDpS,EAAAA,EAAAA,KAAA,WAFmBgR,KAMvB,OACE5Q,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0FAAyFE,SAAA,EACtGH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDE,SAAC,wCAGlEC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAME,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6CAA4CE,SAAA,EACzDC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6BAA4BE,SAAA,EACzCH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qDAAoDE,SAAC,gCACnEC,EAAAA,EAAAA,MAAA,KAAGH,UAAU,+BAA8BE,SAAA,CACzB,eAAfkP,GAA+B,yFAChB,iBAAfA,GAAiC,eAClB,SAAfA,GAAyB,kCACV,WAAfA,GAA2B,wCAC1B,CAAC,aAAc,eAAgB,OAAQ,UAAU9C,SAAS8C,IAAe,4CAI/EjP,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6BAA4BE,SAAA,EACzCH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qDAAoDE,SAAC,0BACnEC,EAAAA,EAAAA,MAAA,KAAGH,UAAU,+BAA8BE,SAAA,CAAEqB,EAAMD,OAAO,yBAI7DP,IACCZ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,kCAAiCE,SAAA,EAC9CH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qDAAoDE,SAAC,uCACnEH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sCAAqCE,SAAEa,WAM1DZ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAME,SAAA,EACnBC,EAAAA,EAAAA,MAAA,MAAIH,UAAU,qDAAoDE,SAAA,EAChEH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBE,UACjCH,EAAAA,EAAAA,KAAA,OAAK+C,MAAM,6BAA6B9C,UAAU,gCAAgCgD,QAAQ,YAAYD,KAAK,eAAc7C,UACvHH,EAAAA,EAAAA,KAAA,QAAMqS,SAAS,UAAU/O,EAAE,mIAAmIgP,SAAS,gBAEpK,0CAITtS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0EAAyEE,UACtFH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mEAAkEE,SAC9E+R,GAAmB,4DAM1B9R,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAIH,UAAU,qDAAoDE,SAAA,EAChEH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBE,UACjCH,EAAAA,EAAAA,KAAA,OAAK+C,MAAM,6BAA6B9C,UAAU,gCAAgCgD,QAAQ,YAAYD,KAAK,eAAc7C,UACvHH,EAAAA,EAAAA,KAAA,QAAMqS,SAAS,UAAU/O,EAAE,mHAAmHgP,SAAS,gBAEpJ,yBAITtS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+FAA8FE,UAC3GH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4CAA2CE,SAAC,0dAO7DC,EAAAA,EAAAA,MAACqB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,GAAKiO,MAAO,IACpChQ,UAAU,mBAAkBE,SAAA,EAE5BH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4CAA2CE,SAAC,qDACzDC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BE,SAAA,EACxCH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,sFAAqFE,UACrGH,EAAAA,EAAAA,KAAA,OAAK+C,MAAM,6BAA6B0E,MAAM,KAAKlE,OAAO,KAAKN,QAAQ,YAAYD,KAAK,eAAc7C,UACpGH,EAAAA,EAAAA,KAAA,QAAMsD,EAAE,qMAGZtD,EAAAA,EAAAA,KAAA,UAAQC,UAAU,sFAAqFE,UACrGH,EAAAA,EAAAA,KAAA,OAAK+C,MAAM,6BAA6B0E,MAAM,KAAKlE,OAAO,KAAKN,QAAQ,YAAYD,KAAK,eAAc7C,UACpGH,EAAAA,EAAAA,KAAA,QAAMsD,EAAE,klBAGZtD,EAAAA,EAAAA,KAAA,UAAQC,UAAU,sFAAqFE,UACrGH,EAAAA,EAAAA,KAAA,OAAK+C,MAAM,6BAA6B0E,MAAM,KAAKlE,OAAO,KAAKN,QAAQ,YAAYD,KAAK,eAAc7C,UACpGH,EAAAA,EAAAA,KAAA,QAAMsD,EAAE,uiCAGZtD,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8EAA6EE,UAC7FC,EAAAA,EAAAA,MAAA,OAAK2C,MAAM,6BAA6B0E,MAAM,KAAKlE,OAAO,KAAKN,QAAQ,YAAYD,KAAK,OAAOE,OAAO,eAAeG,YAAY,IAAIF,cAAc,QAAQC,eAAe,QAAOjD,SAAA,EAC/KH,EAAAA,EAAAA,KAAA,QAAM0I,EAAE,IAAI7G,EAAE,IAAI4F,MAAM,KAAKlE,OAAO,KAAKgP,GAAG,IAAIC,GAAG,OACnDxS,EAAAA,EAAAA,KAAA,QAAMsD,EAAE,yEAKZ,E,cCvHH,MAAMmP,EAAa,CACxB,CACEvS,GAAI,EACJG,KAAM,WACNqS,OAAQ,oBACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,sDACV6D,SAAU,CAAC,mCAAgB,oBAAa,gBAAS,uBACjDC,QAAS,2XACTC,gBAAiB,qSACjBC,OAAQ,8QAEV,CACE7S,GAAI,EACJG,KAAM,eACNqS,OAAQ,4BACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,0DACV6D,SAAU,CAAC,cAAS,mBAAY,0BAAY,sBAC5CC,QAAS,6VACTC,gBAAiB,oRACjBC,OAAQ,oRAEV,CACE7S,GAAI,EACJG,KAAM,qBACNqS,OAAQ,0BACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,gEACV6D,SAAU,CAAC,oBAAa,kBAAW,gBAAS,mBAC5CC,QAAS,sSACTC,gBAAiB,iNACjBC,OAAQ,uMAEV,CACE7S,GAAI,EACJG,KAAM,cACNqS,OAAQ,oBACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,yDACV6D,SAAU,CAAC,mBAAY,eAAa,0BAAc,iBAClDC,QAAS,kTACTC,gBAAiB,2RACjBC,OAAQ,qPAEV,CACE7S,GAAI,EACJG,KAAM,cACNqS,OAAQ,wBACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,yDACV6D,SAAU,CAAC,sBAAa,yBAAW,wBAAY,oBAC/CC,QAAS,yUACTC,gBAAiB,6LACjBC,OAAQ,qQAEV,CACE7S,GAAI,EACJG,KAAM,iBACNqS,OAAQ,mBACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,4DACV6D,SAAU,CAAC,yBAAgB,cAAY,wBAAU,4BACjDC,QAAS,oRACTC,gBAAiB,iRACjBC,OAAQ,gPAEV,CACE7S,GAAI,EACJG,KAAM,aACNqS,OAAQ,uBACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,wDACV6D,SAAU,CAAC,iBAAY,qBAAY,mBAAY,qBAC/CC,QAAS,2SACTC,gBAAiB,8SACjBC,OAAQ,mPAEV,CACE7S,GAAI,EACJG,KAAM,cACNqS,OAAQ,gBACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,yDACV6D,SAAU,CAAC,oBAAa,cAAS,wBAAe,0BAChDC,QAAS,2UACTC,gBAAiB,uTACjBC,OAAQ,sOAEV,CACE7S,GAAI,EACJG,KAAM,WACNqS,OAAQ,qBACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,sDACV6D,SAAU,CAAC,qBAAY,oBAAa,oBAAa,cACjDC,QAAS,kSACTC,gBAAiB,oPACjBC,OAAQ,kPAEV,CACE7S,GAAI,GACJG,KAAM,aACNqS,OAAQ,kBACRC,KAAM,eACNjP,MAAO,EACPqL,SAAU,wDACV6D,SAAU,CAAC,qBAAY,gBAAY,sBAAU,oBAC7CC,QAAS,2PACTC,gBAAiB,4RACjBC,OAAQ,yMAEV,CACE7S,GAAI,GACJG,KAAM,mBACNqS,OAAQ,gCACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,8DACV6D,SAAU,CAAC,qBAAY,qBAAY,mBAAU,eAC7CC,QAAS,mTACTC,gBAAiB,4RACjBC,OAAQ,qNAEV,CACE7S,GAAI,GACJG,KAAM,UACNqS,OAAQ,gBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,qDACV6D,SAAU,CAAC,oBAAa,oBAAW,oBAAa,6CAChDC,QAAS,8TACTC,gBAAiB,wRACjBC,OAAQ,mNAEV,CACE7S,GAAI,GACJG,KAAM,iBACNqS,OAAQ,uCACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,4DACV6D,SAAU,CAAC,qBAAY,6BAAiB,UAAW,oBACnDC,QAAS,iYACTC,gBAAiB,2OACjBC,OAAQ,qPAEV,CACE7S,GAAI,GACJG,KAAM,QACNqS,OAAQ,oBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,mDACV6D,SAAU,CAAC,mBAAY,4BAAc,yBAAW,oBAChDC,QAAS,gVACTC,gBAAiB,0SACjBC,OAAQ,kRAEV,CACE7S,GAAI,GACJG,KAAM,aACNqS,OAAQ,qBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,wDACV6D,SAAU,CAAC,mBAAY,8BAAW,oBAAa,mBAC/CC,QAAS,+PACTC,gBAAiB,+NACjBC,OAAQ,0OAEV,CACE7S,GAAI,GACJG,KAAM,YACNqS,OAAQ,mBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,uDACV6D,SAAU,CAAC,oBAAa,wBAAe,qBAAY,oBACnDC,QAAS,uTACTC,gBAAiB,kPACjBC,OAAQ,+NAEV,CACE7S,GAAI,GACJG,KAAM,YACNqS,OAAQ,iBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,uDACV6D,SAAU,CAAC,2BAAa,wBAAe,sBAAa,sBACpDC,QAAS,kWACTC,gBAAiB,kTACjBC,OAAQ,6SAEV,CACE7S,GAAI,GACJG,KAAM,WACNqS,OAAQ,cACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,sDACV6D,SAAU,CAAC,eAAW,gBAAY,qBAAY,2BAC9CC,QAAS,iUACTC,gBAAiB,qOACjBC,OAAQ,+QAEV,CACE7S,GAAI,GACJG,KAAM,WACNqS,OAAQ,sBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,sDACV6D,SAAU,CAAC,0BAAY,iBAAU,kBAAW,qBAC5CC,QAAS,oUACTC,gBAAiB,yOACjBC,OAAQ,4QAEV,CACE7S,GAAI,GACJG,KAAM,UACNqS,OAAQ,qBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,qDACV6D,SAAU,CAAC,mBAAc,gBAAY,4BAAc,iBACnDC,QAAS,0SACTC,gBAAiB,oNACjBC,OAAQ,kQAEV,CACE7S,GAAI,GACJG,KAAM,YACNqS,OAAQ,iBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,uDACV6D,SAAU,CAAC,cAAY,sBAAa,eAAW,+CAC/CC,QAAS,2VACTC,gBAAiB,kTACjBC,OAAQ,oPAEV,CACE7S,GAAI,GACJG,KAAM,YACNqS,OAAQ,qBACRC,KAAM,eACNjP,MAAO,GACPqL,SAAU,uDACV6D,SAAU,CAAC,mBAAc,oBAAa,qBAAY,eAClDC,QAAS,4VACTC,gBAAiB,+PACjBC,OAAQ,+PCjQCC,EAAkB,WAAuC,IAAtCC,EAAiBC,UAAA3R,OAAA,QAAAyL,IAAAkG,UAAA,GAAAA,UAAA,GAAG,aAElD,MAAO1R,EAAO2R,IAAYpS,EAAAA,EAAAA,UAAS,KAC5BL,EAAW0S,IAAgBrS,EAAAA,EAAAA,WAAS,IACpCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,OAC5BsO,EAAYgE,IAAiBtS,EAAAA,EAAAA,UAASkS,IACtCjS,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCkR,EAAQqB,IAAavS,EAAAA,EAAAA,UAAS,OAGrCiN,EAAAA,EAAAA,YAAU,KACJiF,GAAqB,CAAC,aAAc,eAAgB,OAAQ,UAAU1G,SAAS0G,IACjFI,EAAcJ,EAChB,GACC,CAACA,IA8IJ,MAAO,CACLzR,QACAd,YACAU,QACAiO,aACArO,WACAiR,SACAsB,aAlDmBC,UACnB,IACEJ,GAAa,GACb/R,EAAS,MAGLoS,EAASpE,YACXgE,EAAcI,EAASpE,iBAGCrC,IAAtByG,EAASzS,UACXC,EAAYwS,EAASzS,UAIvB,MAAM0S,EA/GkBC,MAC1B,IAEE,MAAMC,EAAgB,IAAInB,GAAYoB,MAAK,IAAMrJ,KAAKC,SAAW,KAGjE,IAAIqJ,EAAY,EAEhB,OAAQzE,GACN,IAAK,aAUL,QACEyE,EAAY,QARd,IAAK,eACHA,EAAY,GACZ,MACF,IAAK,OACL,IAAK,SACHA,EAAY,EAYhB,OALmBF,EAAcG,MAAM,EAAGD,GAAWlR,KAAIyK,IAAI,IACxDA,EACHY,WAAYzD,KAAKC,SAAW,MAIhC,CAAE,MAAOzF,GAEP,MADArC,QAAQvB,MAAM,qCAAsC4D,GAC9C,IAAIC,MAAM,sFAClB,GA8EqB0O,SAGb,IAAIK,SAAQC,GAAWC,WAAWD,EAAS,QAGjD,MAAME,EAhFoBC,EAACV,EAAYW,KAAkB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1D,IACE,IAAI1C,EAAa,GAQjB,OALIE,IACFF,GAAc,wDAA8BE,UAItChF,GACN,IAAK,aACH8E,GAAc,0GACdA,GAAc,oBAAyB,QAAzBG,EAAYZ,EAAW,UAAE,IAAAY,OAAA,EAAbA,EAAejU,UAAuB,QAAbkU,EAAAb,EAAW,UAAE,IAAAa,GAAbA,EAAetG,WAA0B,QAAhBuG,EAAGd,EAAW,UAAE,IAAAc,OAAA,EAAbA,EAAe1B,gBAA+B,QAAhB2B,EAAGf,EAAW,UAAE,IAAAe,OAAA,EAAbA,EAAe5B,cAC/HsB,GAAc,uBAA0B,QAA1BO,EAAahB,EAAW,UAAE,IAAAgB,OAAA,EAAbA,EAAerU,UAAuB,QAAbsU,EAAAjB,EAAW,UAAE,IAAAiB,GAAbA,EAAe1G,WAA0B,QAAhB2G,EAAGlB,EAAW,UAAE,IAAAkB,OAAA,EAAbA,EAAe9B,gBAA+B,QAAhB+B,EAAGnB,EAAW,UAAE,IAAAmB,OAAA,EAAbA,EAAehC,cAChIsB,GAAc,wBAA2B,QAA3BW,EAAcpB,EAAW,UAAE,IAAAoB,OAAA,EAAbA,EAAezU,UAAuB,QAAb0U,EAAArB,EAAW,UAAE,IAAAqB,GAAbA,EAAe9G,WAA0B,QAAhB+G,EAAGtB,EAAW,UAAE,IAAAsB,OAAA,EAAbA,EAAelC,gBAA+B,QAAhBmC,EAAGvB,EAAW,UAAE,IAAAuB,OAAA,EAAbA,EAAepC,cACjI,MAEF,IAAK,eACHsB,GAAc,sLAEdA,GAAc,6CAAwC,QAAxCe,EAA2BxB,EAAW,UAAE,IAAAwB,OAAA,EAAbA,EAAe7U,UAAuB,QAAb8U,EAAAzB,EAAW,UAAE,IAAAyB,GAAbA,EAAelH,WAA0B,QAAhBmH,EAAG1B,EAAW,UAAE,IAAA0B,OAAA,EAAbA,EAAetC,gBAA+B,QAAhBuC,EAAG3B,EAAW,UAAE,IAAA2B,OAAA,EAAbA,EAAexC,cAC9IsB,GAAc,0BAA+B,QAA/BmB,EAAkB5B,EAAW,UAAE,IAAA4B,OAAA,EAAbA,EAAejV,UAAuB,QAAbkV,EAAA7B,EAAW,UAAE,IAAA6B,GAAbA,EAAetH,WAA0B,QAAhBuH,EAAG9B,EAAW,UAAE,IAAA8B,OAAA,EAAbA,EAAe1C,gBAA+B,QAAhB2C,EAAG/B,EAAW,UAAE,IAAA+B,OAAA,EAAbA,EAAe5C,cAErI,MAEF,IAAK,OACHsB,GAAc,qDACdA,GAAc,aAAqB,QAArBuB,EAAQhC,EAAW,UAAE,IAAAgC,OAAA,EAAbA,EAAerV,UAAuB,QAAbsV,EAAAjC,EAAW,UAAE,IAAAiC,GAAbA,EAAe1H,WAA0B,QAAhB2H,EAAGlC,EAAW,UAAE,IAAAkC,OAAA,EAAbA,EAAe9C,gBAA+B,QAAhB+C,EAAGnC,EAAW,UAAE,IAAAmC,OAAA,EAAbA,EAAehD,cAC3HsB,GAAc,mCAA4B,QAA5B2B,EAAepC,EAAW,UAAE,IAAAoC,OAAA,EAAbA,EAAezV,UAAuB,QAAb0V,EAAArC,EAAW,UAAE,IAAAqC,GAAbA,EAAe9H,WAA0B,QAAhB+H,EAAGtC,EAAW,UAAE,IAAAsC,OAAA,EAAbA,EAAelD,gBAA+B,QAAhBmD,EAAGvC,EAAW,UAAE,IAAAuC,OAAA,EAAbA,EAAepD,cAClIsB,GAAc,6CAAsC,QAAtC+B,EAAyBxC,EAAW,UAAE,IAAAwC,OAAA,EAAbA,EAAe7V,UAAuB,QAAb8V,EAAAzC,EAAW,UAAE,IAAAyC,GAAbA,EAAelI,WAA0B,QAAhBmI,EAAG1C,EAAW,UAAE,IAAA0C,OAAA,EAAbA,EAAetD,gBAA+B,QAAhBuD,EAAG3C,EAAW,UAAE,IAAA2C,OAAA,EAAbA,EAAexD,cAE5I,MAEF,IAAK,SACHsB,GAAc,0DACdA,GAAc,uCAAoC,QAApCmC,EAAuB5C,EAAW,UAAE,IAAA4C,OAAA,EAAbA,EAAejW,UAAuB,QAAbkW,EAAA7C,EAAW,UAAE,IAAA6C,GAAbA,EAAetI,WAA0B,QAAhBuI,EAAG9C,EAAW,UAAE,IAAA8C,OAAA,EAAbA,EAAe1D,gBAA+B,QAAhB2D,EAAG/C,EAAW,UAAE,IAAA+C,OAAA,EAAbA,EAAe5D,cAC1IsB,GAAc,uBAA4B,QAA5BuC,EAAehD,EAAW,UAAE,IAAAgD,OAAA,EAAbA,EAAerW,UAAuB,QAAbsW,EAAAjD,EAAW,UAAE,IAAAiD,GAAbA,EAAe1I,WAA0B,QAAhB2I,EAAGlD,EAAW,UAAE,IAAAkD,OAAA,EAAbA,EAAe9D,gBAA+B,QAAhB+D,EAAGnD,EAAW,UAAE,IAAAmD,OAAA,EAAbA,EAAehE,cAElI,MAEF,QACEsB,GAAc,oEACdT,EAAWhJ,SAAQ,CAAC2C,EAAM2D,KACxBmD,GAAc,SAAMnD,EAAQ,MAAM3D,EAAKhN,UAAUgN,EAAKY,WAAaZ,EAAKyF,gBAAkBzF,EAAKwF,aAAa,IAOlH,OAFAsB,GAAc,yVAEPA,CACT,CAAE,MAAOnP,GAEP,OADArC,QAAQvB,MAAM,mCAAoC4D,GAC3C,+FACT,GAyBqBoP,CAAsBV,EAAYD,EAASzS,UAG9DmS,EAASO,GACTJ,EAAUa,EAEZ,CAAE,MAAOnP,GACPrC,QAAQvB,MAAM,0BAA2B4D,GACzC3D,EAAS2D,EAAI8R,SAAW,qEAC1B,CAAC,QACC1D,GAAa,EACf,GAmBA2D,aAfmBA,KACnB5D,EAAS,IACTG,EAAU,MACVjS,EAAS,KAAK,EAclB,EC+DA,EAhOyB2V,KACvB,MAAQ3H,WAAY4H,IAAoBC,EAAAA,EAAAA,KAClCC,GAAWC,EAAAA,EAAAA,OACV7H,EAAmB8H,IAAwBtW,EAAAA,EAAAA,UAAS,OACpDuW,EAAmBC,IAAwBxW,EAAAA,EAAAA,WAAS,IACrD,MACJS,EAAK,UACLd,EAAS,MACTU,EAAK,WACLiO,EAAU,SACVrO,EAAQ,OACRiR,EAAM,aACNsB,EAAY,aACZwD,GACE/D,EAAgBiE,IAGpBjJ,EAAAA,EAAAA,YAAU,KACJiJ,IAAoB,CAAC,aAAc,eAAgB,OAAQ,UAAU1K,SAAS0K,IAChFE,EAAS,kBACX,GACC,CAACF,EAAiBE,IAGrB,MAAMK,EAAoB/D,IACxBF,EAAaE,EAAS,EAIlB1C,EAAkBA,CAAC1D,EAAM2D,KAC7BqG,EAAqBrG,EAAM,EAIvByG,EAAmBA,KACvBV,IACAM,EAAqB,MACrBE,GAAqB,EAAM,EAIvBG,EAAwBA,KAC5BH,GAAqB,EAAK,EAyJ5B,OACEvX,EAAAA,EAAAA,KAAC2X,EAAAA,EAAS,CAAAxX,UACRH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uEAAsEE,UACnFC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBE,SAAA,EAChCH,EAAAA,EAAAA,KAACyB,EAAAA,EAAOmW,GAAE,CACRjW,QAAS,CAAEC,QAAS,EAAGC,GAAI,IAC3BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxB/B,UAAU,4EAA2EE,SACtF,4BAIDH,EAAAA,EAAAA,KAACyB,EAAAA,EAAOoW,EAAC,CACPlW,QAAS,CAAEC,QAAS,EAAGC,GAAI,IAC3BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,GAAKiO,MAAO,IACpChQ,UAAU,mEAAkEE,SAC7E,8LAvKa2X,MAAO,IAADC,EAE1B,OAAIrX,GAEAN,EAAAA,EAAAA,MAAA,OAAKH,UAAU,kDAAiDE,SAAA,EAC9DH,EAAAA,EAAAA,KAACgY,EAAAA,EAAc,CAAC1Q,KAAK,WACrBtH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BE,SAAC,qCAM5CiB,GAEAhB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+EAA8EE,SAAA,EAC3FH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaE,SAAC,gCAC3BH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,UAASE,SAAEiB,KACxBpB,EAAAA,EAAAA,KAAA,UACEH,QAAS4X,EACTxX,UAAU,uFAAsFE,SACjG,yBAQFqB,EAAMD,QAaTnB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBE,SAAA,EAEhCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOE,UACpBH,EAAAA,EAAAA,KAACiY,EAAW,CACVzW,MAAOA,EACP6N,WAAYA,EACZC,YAAayB,EACbxB,kBAAmBA,MAKA,OAAtBA,IACCvP,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxB/B,UAAU,QAAOE,UAEjBH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gFAA+EE,UAC5FC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,8DAA6DE,SAAA,EAC1EH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBE,UACrCH,EAAAA,EAAAA,KAACyR,EAAS,CACRpE,KAAM7L,EAAM+N,GACZjC,WAAW,EACXhG,KAAK,aAITlH,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUE,SAAA,EACvBC,EAAAA,EAAAA,MAAA,MAAIH,UAAU,oDAAmDE,SAAA,CAC9DqB,EAAM+N,GAAmBlP,KACzBmB,EAAM+N,GAAmBtB,YAAc,yBAG1C7N,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BE,SAAA,EACxCH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2DAA0DE,SACvEqB,EAAM+N,GAAmBoD,MAAQ,iBAEF,QAD3BoF,EACNvW,EAAM+N,GAAmBqD,gBAAQ,IAAAmF,OAAA,EAAjCA,EAAmCnV,KAAI,CAACsV,EAAS5L,KAChDtM,EAAAA,EAAAA,KAAA,QAAcC,UAAU,sDAAqDE,SAC1E+X,GADQ5L,SAMflM,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAME,SAAA,EACnBH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qDAAoDE,SAAC,qBACnEH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BAA8BE,SACxCqB,EAAM+N,GAAmBtB,WACtBzM,EAAM+N,GAAmBuD,iBAAmB,gEAC5CtR,EAAM+N,GAAmBsD,SAAW,qDAI3CrR,EAAM+N,GAAmBwD,SACxB3S,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qDAAoDE,SAAC,wBACnEH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BAA8BE,SACxCqB,EAAM+N,GAAmBwD,sBAWxCuE,GAUAtX,EAAAA,EAAAA,KAACyB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxB/B,UAAU,QAAOE,UAEjBH,EAAAA,EAAAA,KAACmY,EAAkB,CACjB3W,MAAOA,EACP6N,WAAYA,EACZrO,SAAUA,EACViR,OAAQA,OAnBZjS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBE,UAChCH,EAAAA,EAAAA,KAAA,UACEH,QAAS6X,EACTzX,UAAU,6HAA4HE,SACvI,+CAqBLH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBE,UAChCH,EAAAA,EAAAA,KAAA,UACEH,QAAS4X,EACTxX,UAAU,2IAA0IE,SACrJ,oCA/GHH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBE,UAChCH,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,CACf2B,SAAUuV,EACVvE,kBAAmBgE,KAgHnB,EA0BDa,SAGK,C","sources":["features/tarot/components/TarotReadingForm.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","shared/layouts/AppLayout.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/prop-types/index.js","features/tarot/components/TarotCard.js","features/tarot/components/TarotSpread.js","features/tarot/components/TarotReadingResult.js","features/tarot/data/tarotCardsData.js","features/tarot/hooks/useTarotReading.js","features/tarot/pages/TarotReadingPage.js"],"sourcesContent":["import React, { useState, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { performReading } from '../slices/tarotSlice';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ReadingTypeCard = memo(({ type, selected, onClick, icon, description }) => (\r\n  <div \r\n    className={`p-4 rounded-lg cursor-pointer transition-all duration-300 \r\n    ${selected \r\n      ? 'bg-gradient-to-r from-[#9370db] to-[#8a2be2] shadow-lg transform scale-[1.02]' \r\n      : 'bg-white/5 backdrop-blur-sm border border-purple-900/20 hover:bg-white/10'}`}\r\n    onClick={() => onClick(type.id)}\r\n  >\r\n    <div className=\"flex items-center\">\r\n      <div className=\"w-12 h-12 rounded-full bg-[#2a1045] flex items-center justify-center mr-4\">\r\n        <span className=\"text-2xl\">{icon}</span>\r\n      </div>\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-white mb-1 tracking-vn-tight\">{type.name}</h3>\r\n        <p className=\"text-sm text-gray-300 tracking-vn-tight\">{description}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n));\r\n\r\n/**\r\n * Form để bắt đầu một phiên đọc bài Tarot \r\n * @param {Object} props - Component props\r\n * @param {Function} props.onStart - Callback khi bắt đầu trải bài\r\n * @param {Array} props.readingTypes - Danh sách các loại trải bài\r\n * @param {boolean} props.isLoading - Trạng thái loading\r\n */\r\nconst TarotReadingForm = memo(({ onStart, readingTypes = [], isLoading = false }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectedType, setSelectedType] = useState('three-card'); // Mặc định chọn trải bài 3 lá\r\n  const [question, setQuestion] = useState('');\r\n  const [showAIQuestion, setShowAIQuestion] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  // Các loại trải bài mặc định nếu không có data\r\n  const defaultReadingTypes = [\r\n    { id: 'three-card', name: 'Trải bài 3 lá', cards: 3, description: 'Quá khứ, hiện tại và tương lai' },\r\n    { id: 'celtic-cross', name: 'Celtic Cross', cards: 10, description: 'Phân tích chi tiết tình huống' },\r\n    { id: 'love', name: 'Tình yêu', cards: 5, description: 'Tập trung vào tình yêu và mối quan hệ' },\r\n    { id: 'career', name: 'Sự nghiệp', cards: 5, description: 'Tập trung vào công việc và sự nghiệp' }\r\n  ];\r\n  \r\n  const types = readingTypes.length > 0 ? readingTypes : defaultReadingTypes;\r\n  \r\n  // Icons cho các loại trải bài\r\n  const typeIcons = {\r\n    'three-card': '🃏',\r\n    'celtic-cross': '✝️',\r\n    'love': '❤️',\r\n    'career': '💼',\r\n    'health': '🩺',\r\n    'spiritual': '✨',\r\n    'yearly': '📅',\r\n    'daily': '🌞'\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate\r\n    if (!selectedType) {\r\n      setError('Vui lòng chọn loại trải bài');\r\n      return;\r\n    }\r\n    \r\n    setError('');\r\n    \r\n    // Tìm type đã chọn\r\n    const selectedReadingType = types.find(type => type.id === selectedType);\r\n    \r\n    if (!selectedReadingType) {\r\n      setError('Loại trải bài không hợp lệ');\r\n      return;\r\n    }\r\n    \r\n    // Tạo dữ liệu reading\r\n    const readingData = {\r\n      readingType: selectedType,\r\n      question: question.trim(),\r\n      numCards: selectedReadingType.cards || 3\r\n    };\r\n    \r\n    // Dispatch action\r\n    try {\r\n      dispatch(performReading(readingData));\r\n      \r\n      // Gọi callback\r\n      if (onStart) {\r\n        onStart(readingData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Lỗi khi thực hiện trải bài:', error);\r\n      setError('Có lỗi xảy ra khi thực hiện trải bài. Vui lòng thử lại sau.');\r\n    }\r\n  };\r\n  \r\n  // Bắt đầu trải bài ngay lập tức, không cần câu hỏi\r\n  const handleQuickStart = () => {\r\n    if (!selectedType) {\r\n      setError('Vui lòng chọn loại trải bài');\r\n      return;\r\n    }\r\n    \r\n    setError('');\r\n    \r\n    // Tìm type đã chọn\r\n    const selectedReadingType = types.find(type => type.id === selectedType);\r\n    \r\n    if (!selectedReadingType) {\r\n      setError('Loại trải bài không hợp lệ');\r\n      return;\r\n    }\r\n    \r\n    // Tạo dữ liệu reading không có câu hỏi\r\n    const readingData = {\r\n      readingType: selectedType,\r\n      numCards: selectedReadingType.cards || 3\r\n    };\r\n    \r\n    // Dispatch action\r\n    try {\r\n      dispatch(performReading(readingData));\r\n      \r\n      // Gọi callback\r\n      if (onStart) {\r\n        onStart(readingData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Lỗi khi thực hiện trải bài:', error);\r\n      setError('Có lỗi xảy ra khi thực hiện trải bài. Vui lòng thử lại sau.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"w-full max-w-2xl mx-auto\"\r\n    >\r\n      <form onSubmit={handleSubmit} className=\"bg-white/5 backdrop-blur-sm border border-purple-900/20 rounded-xl p-6 shadow-lg\">\r\n        <div className=\"mb-6\">\r\n          <h2 className=\"text-2xl font-bold mb-2 text-white tracking-tight\">Trải Bài Tarot</h2>\r\n          <p className=\"text-gray-300 tracking-tight\">\r\n            Hãy đặt một câu hỏi cụ thể hoặc chọn trải bài ngay để nhận thông điệp\r\n          </p>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"bg-red-500/20 backdrop-blur-sm border border-red-500/30 rounded-lg p-4 mb-6\">\r\n            <p className=\"text-white tracking-vn-tight\">{error}</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-white font-medium mb-3 tracking-tight\">Chọn loại trải bài</label>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n            {types.map((type) => (\r\n              <div \r\n                key={type.id}\r\n                onClick={() => setSelectedType(type.id)}\r\n                className={`\r\n                  cursor-pointer p-3 rounded-lg border transition-all duration-200\r\n                  ${selectedType === type.id \r\n                    ? 'bg-[#9370db]/20 border-[#9370db] shadow-md' \r\n                    : 'bg-white/5 border-purple-900/20 hover:bg-white/10'}\r\n                `}\r\n              >\r\n                <div className=\"flex items-center\">\r\n                  <div className={`w-4 h-4 rounded-full mr-2 border ${selectedType === type.id ? 'bg-[#9370db] border-[#9370db]' : 'bg-transparent border-white/50'}`}>\r\n                    {selectedType === type.id && (\r\n                      <div className=\"w-full h-full rounded-full bg-white scale-50\"></div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-white font-medium tracking-tight\">{type.name}</p>\r\n                    <p className=\"text-xs text-gray-300 tracking-tight\">{type.description}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mb-6\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleQuickStart}\r\n            disabled={isLoading}\r\n            className=\"flex items-center text-[#9370db] hover:text-[#8a2be2] transition-colors\"\r\n          >\r\n            <span className=\"mr-2\">{isLoading ? 'Đang xử lý...' : 'Trải Bài Ngay'}</span>\r\n            <svg \r\n              xmlns=\"http://www.w3.org/2000/svg\" \r\n              className={`h-5 w-5 transition-transform duration-300 ${isLoading ? 'animate-spin' : ''}`}\r\n              fill=\"none\" \r\n              viewBox=\"0 0 24 24\" \r\n              stroke=\"currentColor\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"mb-6\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowAIQuestion(!showAIQuestion)}\r\n            className=\"flex items-center text-[#9370db] hover:text-[#8a2be2] transition-colors\"\r\n          >\r\n            <span className=\"mr-2\">{showAIQuestion ? 'Ẩn câu hỏi' : 'Đặt câu hỏi cho trải bài'}</span>\r\n            <svg \r\n              xmlns=\"http://www.w3.org/2000/svg\" \r\n              className={`h-5 w-5 transition-transform duration-300 ${showAIQuestion ? 'rotate-180' : ''}`}\r\n              fill=\"none\" \r\n              viewBox=\"0 0 24 24\" \r\n              stroke=\"currentColor\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        \r\n        {showAIQuestion && (\r\n          <motion.div\r\n            initial={{ opacity: 0, height: 0 }}\r\n            animate={{ opacity: 1, height: 'auto' }}\r\n            exit={{ opacity: 0, height: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n            className=\"mb-6\"\r\n          >\r\n            <label htmlFor=\"question\" className=\"block text-white font-medium mb-2 tracking-tight\">\r\n              Câu hỏi của bạn\r\n            </label>\r\n            <textarea\r\n              id=\"question\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n              placeholder=\"Nhập câu hỏi bạn muốn tìm hiểu...\"\r\n              className=\"w-full p-3 bg-white/10 border border-purple-900/30 rounded-lg text-white placeholder-white/50 focus:ring-[#9370db] focus:border-[#9370db] focus:outline-none transition-colors\"\r\n              rows={3}\r\n            />\r\n            <p className=\"mt-2 text-sm text-gray-400 tracking-tight\">\r\n              Gợi ý: \"Tình yêu của tôi sẽ phát triển như thế nào?\", \"Tôi nên làm gì với công việc hiện tại?\"\r\n            </p>\r\n          </motion.div>\r\n        )}\r\n        \r\n        <div className=\"flex flex-wrap gap-3\">\r\n          {showAIQuestion && (\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!question.trim() || isLoading}\r\n              className={`\r\n                px-6 py-2.5 rounded-lg font-medium shadow-sm transition-all\r\n                ${!question.trim() \r\n                  ? 'bg-white/20 text-white/50 cursor-not-allowed' \r\n                  : 'bg-white text-[#2a1045] hover:bg-gray-100'}\r\n              `}\r\n            >\r\n              {isLoading ? 'Đang xử lý...' : 'Bắt Đầu Với Câu Hỏi'}\r\n            </button>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"mt-4 text-xs text-gray-400 tracking-tight\">\r\n          * Lưu ý: Các lá bài Tarot mang tính biểu tượng và gợi ý. Hãy suy ngẫm ý nghĩa của chúng trong ngữ cảnh cuộc sống của bạn.\r\n        </div>\r\n      </form>\r\n    </motion.div>\r\n  );\r\n});\r\n\r\nTarotReadingForm.propTypes = {\r\n  onStart: PropTypes.func,\r\n  readingTypes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      cards: PropTypes.number.isRequired,\r\n      description: PropTypes.string\r\n    })\r\n  ),\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nReadingTypeCard.propTypes = {\r\n  type: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  selected: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  description: PropTypes.string\r\n};\r\n\r\nexport default TarotReadingForm; ","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\n\r\n/**\r\n * Layout chung cho toàn bộ ứng dụng\r\n * \r\n * @param {Object} props - Component props\r\n * @param {ReactNode} props.children - Nội dung chính của trang\r\n * @param {boolean} props.withAnimation - Có sử dụng hiệu ứng animation hay không \r\n */\r\nconst AppLayout = ({ children, withAnimation = true }) => {\r\n  // Nếu có animation, sử dụng motion.div để tạo hiệu ứng fade-in\r\n  if (withAnimation) {\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <main>{children}</main>\r\n      </motion.div>\r\n    );\r\n  }\r\n  \r\n  // Không có animation, render trực tiếp\r\n  return <main>{children}</main>;\r\n};\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  withAnimation: PropTypes.bool\r\n};\r\n\r\nexport default AppLayout; ","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\n\r\n/**\r\n * Component hiển thị một lá bài Tarot với hiệu ứng lật bài 3D\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Object} props.card - Dữ liệu của lá bài\r\n * @param {boolean} props.isFlipped - Trạng thái lá bài đã lật hay chưa\r\n * @param {Function} props.onClick - Callback khi click vào lá bài\r\n * @param {boolean} props.isSelectable - Lá bài có được chọn không\r\n * @param {boolean} props.isSelected - Lá bài đã được chọn chưa \r\n * @param {number} props.selectedIndex - Thứ tự của lá bài được chọn\r\n * @param {string} props.size - Kích thước của lá bài ('small', 'medium', 'large')\r\n */\r\nconst TarotCard = ({\r\n  card,\r\n  isFlipped = false,\r\n  onClick,\r\n  isSelectable = false,\r\n  isSelected = false,\r\n  selectedIndex = null,\r\n  size = 'medium'\r\n}) => {\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [cardFlipped, setCardFlipped] = useState(isFlipped);\r\n  const [isReversal, setIsReversal] = useState(false);\r\n\r\n  // Thiết lập trạng thái ngược khi component mount\r\n  useEffect(() => {\r\n    // Kiểm tra nếu card tồn tại và có thuộc tính isReversed\r\n    if (card && 'isReversed' in card) {\r\n      setIsReversal(card.isReversed);\r\n    } else {\r\n      // Ngẫu nhiên đặt lá bài ngược hoặc không (20% khả năng bị ngược)\r\n      setIsReversal(Math.random() < 0.2);\r\n    }\r\n  }, [card]);\r\n\r\n  // Update cardFlipped khi prop isFlipped thay đổi\r\n  useEffect(() => {\r\n    setCardFlipped(isFlipped);\r\n  }, [isFlipped]);\r\n\r\n  // Xử lý khi hover vào lá bài\r\n  const handleMouseEnter = () => {\r\n    if (isSelectable && !isSelected) {\r\n      setIsHovering(true);\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsHovering(false);\r\n  };\r\n\r\n  // Xử lý khi click vào lá bài\r\n  const handleClick = () => {\r\n    if (onClick && (isSelectable || !isSelectable)) {\r\n      onClick(card);\r\n    }\r\n  };\r\n\r\n  // Nếu không có dữ liệu card, hiển thị card placeholder\r\n  if (!card) {\r\n    return (\r\n      <div \r\n        className={`\r\n          ${size === 'small' ? 'w-24 h-36' : size === 'medium' ? 'w-32 h-48' : 'w-40 h-60'}\r\n          bg-gradient-to-br from-[#2a1045]/50 to-[#3a1c5a]/50 \r\n          rounded-lg shadow-lg border border-purple-900/20\r\n        `}\r\n      >\r\n        <div className=\"w-full h-full flex items-center justify-center\">\r\n          <span className=\"text-white opacity-50 text-xs\">Lá bài không tồn tại</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Kích thước của card\r\n  const sizeClasses = {\r\n    small: 'w-24 h-36',\r\n    medium: 'w-32 h-48', \r\n    large: 'w-40 h-60'\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`\r\n        ${sizeClasses[size]} \r\n        relative\r\n        transition-transform duration-300\r\n        ${isHovering ? 'scale-105' : ''}\r\n        ${isSelected ? 'ring-4 ring-[#9370db] scale-105' : ''}\r\n      `}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {/* Hiệu ứng glow cho card khi hover hoặc selected */}\r\n      {(isHovering || isSelected) && (\r\n        <div className=\"absolute -inset-3 bg-gradient-to-r from-[#9370db] to-[#8a2be2] rounded-lg opacity-70 blur-md -z-10\"></div>\r\n      )}\r\n\r\n      {/* Card container với transform 3D */}\r\n      <motion.div \r\n        className=\"relative w-full h-full\"\r\n        initial={{ rotateY: 0 }}\r\n        animate={{ rotateY: cardFlipped ? 180 : 0 }}\r\n        transition={{ duration: 0.8, ease: \"easeInOut\" }}\r\n        style={{ \r\n          transformStyle: 'preserve-3d',\r\n          perspective: '1000px'\r\n        }}\r\n      >\r\n        {/* Card back (mặt úp) */}\r\n        <div \r\n          className={`\r\n            absolute w-full h-full rounded-lg shadow-lg overflow-hidden\r\n            ${!cardFlipped ? 'border-2 border-[#9370db]/30' : ''}\r\n          `}\r\n          style={{ backfaceVisibility: 'hidden' }}\r\n        >\r\n          <div className=\"absolute inset-0 bg-gradient-to-br from-[#2a1045] to-[#3a1c5a]\"></div>\r\n          \r\n          {/* Fallback if tarot back image not available */}\r\n          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n            <div className=\"w-full h-full bg-[#2a1045] flex items-center justify-center\">\r\n              <span className=\"text-lg text-white/50\">♤ ♡ ♧ ♢</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Pattern overlay */}\r\n          <div className=\"absolute inset-0 bg-opacity-20\"></div>\r\n          \r\n          {/* Sparkle effect */}\r\n          <div className=\"absolute inset-0 overflow-hidden\">\r\n            <div className=\"absolute h-[500%] w-[50%] top-[-200%] left-[-100%] bg-gradient-to-b from-transparent via-white to-transparent opacity-10 transform rotate-45\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Card front (mặt ngửa) */}\r\n        <div \r\n          className={`\r\n            absolute w-full h-full rounded-lg shadow-lg overflow-hidden\r\n            border-2 border-[#9370db]/30\r\n            ${isReversal ? 'rotate-180' : ''}\r\n          `}\r\n          style={{ \r\n            backfaceVisibility: 'hidden',\r\n            transform: 'rotateY(180deg)'\r\n          }}\r\n        >\r\n          {card.imageUrl ? (\r\n            <div className=\"w-full h-full relative\">\r\n              <img \r\n                src={card.imageUrl} \r\n                alt={card.name || 'Tarot Card'} \r\n                className=\"w-full h-full object-cover\"\r\n                onError={(e) => {\r\n                  e.target.onerror = null;\r\n                  e.target.src = \"https://placehold.co/600x900/2a1045/9370db?text=Tarot\";\r\n                }}\r\n              />\r\n              \r\n              {/* Vignette effect */}\r\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\"></div>\r\n              \r\n              {/* Card name */}\r\n              <div className=\"absolute bottom-2 left-0 right-0 text-center\">\r\n                <p className=\"text-white text-sm font-medium drop-shadow-lg\">\r\n                  {card.name || 'Tarot Card'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"w-full h-full bg-gradient-to-br from-[#2a1045] to-[#3a1c5a] flex items-center justify-center\">\r\n              <p className=\"text-white text-center p-2\">{card.name || 'Tarot Card'}</p>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Selected number indicator */}\r\n          {isSelected && selectedIndex !== null && (\r\n            <div className=\"absolute top-2 right-2 bg-[#9370db] rounded-full w-6 h-6 flex items-center justify-center\">\r\n              <span className=\"text-white text-xs font-bold\">{selectedIndex}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Clickable overlay */}\r\n      <div \r\n        className=\"absolute inset-0 z-10 cursor-pointer\" \r\n        onClick={handleClick}\r\n        aria-label={card.name || \"Tarot Card\"}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTarotCard.propTypes = {\r\n  card: PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    name: PropTypes.string,\r\n    imageUrl: PropTypes.string,\r\n    isReversed: PropTypes.bool\r\n  }),\r\n  isFlipped: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  isSelectable: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n  selectedIndex: PropTypes.number,\r\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\r\n};\r\n\r\nexport default TarotCard; ","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport TarotCard from './TarotCard';\r\n\r\n/**\r\n * Component hiển thị trải bài Tarot với các lá bài và vị trí tương ứng\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Array} props.cards - Mảng các lá bài\r\n * @param {string} props.spreadType - Loại trải bài (three-card, celtic-cross, love, career)\r\n * @param {Function} props.onCardClick - Callback khi click vào lá bài\r\n * @param {number} props.selectedCardIndex - Index của lá bài đang được chọn \r\n */\r\nconst TarotSpread = ({ \r\n  cards = [], \r\n  spreadType = 'three-card', \r\n  onCardClick,\r\n  selectedCardIndex = null\r\n}) => {\r\n  const [flippedCards, setFlippedCards] = useState([]);\r\n  const [cardPositions, setCardPositions] = useState([]);\r\n  const [spreadTitle, setSpreadTitle] = useState('');\r\n  const [spreadDescription, setSpreadDescription] = useState('');\r\n  \r\n  // Hiệu ứng cho các lá bài\r\n  const cardVariants = {\r\n    initial: { \r\n      opacity: 0,\r\n      y: 50,\r\n      rotateY: 0\r\n    },\r\n    animate: (i) => ({ \r\n      opacity: 1,\r\n      y: 0,\r\n      transition: { \r\n        duration: 0.6,\r\n        delay: i * 0.15 \r\n      }\r\n    }),\r\n    exit: { \r\n      opacity: 0,\r\n      y: -20,\r\n      transition: { duration: 0.3 }\r\n    }\r\n  };\r\n\r\n  // Thiết lập layout trải bài dựa vào spreadType\r\n  useEffect(() => {\r\n    let positions = [];\r\n    let title = '';\r\n    let description = '';\r\n    \r\n    switch(spreadType) {\r\n      case 'three-card':\r\n        title = 'Trải Bài Ba Lá';\r\n        description = 'Thể hiện quá khứ, hiện tại và tương lai';\r\n        positions = [\r\n          { name: 'Quá khứ', description: 'Những yếu tố từ quá khứ ảnh hưởng đến tình huống' },\r\n          { name: 'Hiện tại', description: 'Tình huống hiện tại bạn đang đối mặt' },\r\n          { name: 'Tương lai', description: 'Kết quả có thể xảy ra nếu tiếp tục đường hướng hiện tại' }\r\n        ];\r\n        break;\r\n        \r\n      case 'celtic-cross':\r\n        title = 'Celtic Cross';\r\n        description = 'Phân tích chi tiết tình huống hiện tại và các yếu tố ảnh hưởng';\r\n        positions = [\r\n          { name: 'Tình trạng hiện tại', description: 'Trạng thái hiện tại của vấn đề' },\r\n          { name: 'Thách thức', description: 'Thách thức chính cần vượt qua' },\r\n          { name: 'Quá khứ', description: 'Những yếu tố quá khứ ảnh hưởng đến tình huống' },\r\n          { name: 'Tương lai gần', description: 'Những gì sắp xảy ra trong tương lai gần' },\r\n          { name: 'Mục tiêu hoặc Hoài bão', description: 'Mục tiêu và khát vọng của bạn' },\r\n          { name: 'Tiềm thức', description: 'Những suy nghĩ và cảm xúc ngầm' },\r\n          { name: 'Ảnh hưởng', description: 'Những yếu tố bên ngoài ảnh hưởng đến tình huống' },\r\n          { name: 'Hy vọng và Lo sợ', description: 'Hy vọng và nỗi sợ hãi của bạn' },\r\n          { name: 'Lời khuyên', description: 'Lời khuyên để giải quyết tình huống' },\r\n          { name: 'Kết quả', description: 'Kết quả cuối cùng có thể xảy ra' }\r\n        ];\r\n        break;\r\n        \r\n      case 'love':\r\n        title = 'Trải Bài Tình Yêu';\r\n        description = 'Phân tích mối quan hệ tình cảm hiện tại hoặc tiềm năng';\r\n        positions = [\r\n          { name: 'Bạn', description: 'Cách bạn đang cảm nhận và hành động trong mối quan hệ' },\r\n          { name: 'Đối phương', description: 'Cách đối phương đang cảm nhận và hành động' },\r\n          { name: 'Mối quan hệ hiện tại', description: 'Tình trạng hiện tại của mối quan hệ' },\r\n          { name: 'Thách thức', description: 'Thách thức mà mối quan hệ đang đối mặt' },\r\n          { name: 'Điểm mạnh', description: 'Điểm mạnh của mối quan hệ' },\r\n          { name: 'Kết quả tiềm năng', description: 'Hướng phát triển tiềm năng của mối quan hệ' }\r\n        ];\r\n        break;\r\n        \r\n      case 'career':\r\n        title = 'Trải Bài Sự Nghiệp';\r\n        description = 'Phân tích con đường sự nghiệp hiện tại và tiềm năng';\r\n        positions = [\r\n          { name: 'Hiện tại', description: 'Tình hình công việc hiện tại của bạn' },\r\n          { name: 'Thách thức', description: 'Thách thức chính bạn đang đối mặt' },\r\n          { name: 'Cơ hội', description: 'Cơ hội đang hoặc sắp đến với bạn' },\r\n          { name: 'Điểm mạnh', description: 'Điểm mạnh của bạn trong công việc' },\r\n          { name: 'Điểm cần cải thiện', description: 'Lĩnh vực bạn cần phát triển' },\r\n          { name: 'Kết quả tiềm năng', description: 'Kết quả có thể đạt được nếu bạn tiếp tục đường hướng hiện tại' }\r\n        ];\r\n        break;\r\n        \r\n      default:\r\n        positions = [];\r\n    }\r\n    \r\n    setCardPositions(positions);\r\n    setSpreadTitle(title);\r\n    setSpreadDescription(description);\r\n  }, [spreadType]);\r\n  \r\n  // Xử lý lật lá bài từng lá một\r\n  useEffect(() => {\r\n    if (Array.isArray(cards) && cards.length > 0) {\r\n      // Tạo mảng trạng thái lật cho từng lá bài\r\n      const flipStates = Array(cards.length).fill(false);\r\n      setFlippedCards(flipStates);\r\n      \r\n      // Lật từng lá bài với khoảng thời gian delay\r\n      const flipInterval = setInterval(() => {\r\n        setFlippedCards(prev => {\r\n          const nextIndex = prev.findIndex(flipped => !flipped);\r\n          if (nextIndex !== -1) {\r\n            const newState = [...prev];\r\n            newState[nextIndex] = true;\r\n            return newState;\r\n          }\r\n          clearInterval(flipInterval);\r\n          return prev;\r\n        });\r\n      }, 600);\r\n      \r\n      return () => clearInterval(flipInterval);\r\n    }\r\n  }, [cards]);\r\n  \r\n  // Xử lý khi click vào lá bài\r\n  const handleCardClick = (card, index) => {\r\n    if (onCardClick) {\r\n      onCardClick(card, index);\r\n    }\r\n  };\r\n  \r\n  // Xử lý layout trải bài tùy theo loại\r\n  const getSpreadLayout = () => {\r\n    if (!cards || cards.length === 0) {\r\n      return (\r\n        <div className=\"flex items-center justify-center h-60\">\r\n          <p className=\"text-white/70 text-lg\">Chưa có lá bài nào được trải</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    switch(spreadType) {\r\n      case 'three-card':\r\n        return (\r\n          <div className=\"flex flex-col space-y-12\">\r\n            <div className=\"flex justify-center space-x-6 md:space-x-10\">\r\n              {[0, 1, 2].map(index => (\r\n                cards[index] ? (\r\n                  <motion.div\r\n                    key={index}\r\n                    custom={index}\r\n                    variants={cardVariants}\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    exit=\"exit\"\r\n                    className=\"flex flex-col items-center\"\r\n                  >\r\n                    <TarotCard\r\n                      card={cards[index]}\r\n                      isFlipped={flippedCards[index]}\r\n                      onClick={() => handleCardClick(cards[index], index)}\r\n                      isSelected={selectedCardIndex === index}\r\n                      size=\"medium\"\r\n                    />\r\n                    <div className=\"mt-3 text-center\">\r\n                      <p className=\"text-white font-medium text-sm\">{cardPositions[index]?.name}</p>\r\n                      <p className=\"text-gray-400 text-xs max-w-[150px]\">{cardPositions[index]?.description}</p>\r\n                    </div>\r\n                  </motion.div>\r\n                ) : (\r\n                  <motion.div\r\n                    key={index}\r\n                    custom={index}\r\n                    variants={cardVariants}\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    exit=\"exit\"\r\n                    className=\"flex flex-col items-center\"\r\n                  >\r\n                    <div className=\"w-32 h-48 bg-white/5 border border-purple-900/20 rounded-lg flex items-center justify-center\">\r\n                      <span className=\"text-white/50 text-xs\">Không có lá bài</span>\r\n                    </div>\r\n                    <div className=\"mt-3 text-center\">\r\n                      <p className=\"text-white font-medium text-sm\">{cardPositions[index]?.name}</p>\r\n                      <p className=\"text-gray-400 text-xs max-w-[150px]\">{cardPositions[index]?.description}</p>\r\n                    </div>\r\n                  </motion.div>\r\n                )\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n        \r\n      case 'celtic-cross':\r\n        // Celtic Cross là một trải bài phức tạp hơn với 10 lá bài\r\n        return (\r\n          <div className=\"grid grid-cols-7 grid-rows-4 gap-2 relative h-[500px] md:h-[600px]\">\r\n            {/* Phần trung tâm (celtic cross) */}\r\n            <div className=\"col-start-3 col-span-1 row-start-2 row-span-1 flex justify-center items-center z-20\">\r\n              {cards[0] && (\r\n                <motion.div\r\n                  custom={0}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[0]}\r\n                    isFlipped={flippedCards[0]}\r\n                    onClick={() => handleCardClick(cards[0], 0)}\r\n                    isSelected={selectedCardIndex === 0}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"col-start-4 col-span-1 row-start-2 row-span-1 flex justify-center items-center z-10\">\r\n              {cards[1] && (\r\n                <motion.div\r\n                  custom={1}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                  className=\"rotate-90\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[1]}\r\n                    isFlipped={flippedCards[1]}\r\n                    onClick={() => handleCardClick(cards[1], 1)}\r\n                    isSelected={selectedCardIndex === 1}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"col-start-3 col-span-1 row-start-1 row-span-1 flex justify-center items-center\">\r\n              {cards[2] && (\r\n                <motion.div\r\n                  custom={2}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[2]}\r\n                    isFlipped={flippedCards[2]}\r\n                    onClick={() => handleCardClick(cards[2], 2)}\r\n                    isSelected={selectedCardIndex === 2}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"col-start-3 col-span-1 row-start-3 row-span-1 flex justify-center items-center\">\r\n              {cards[3] && (\r\n                <motion.div\r\n                  custom={3}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[3]}\r\n                    isFlipped={flippedCards[3]}\r\n                    onClick={() => handleCardClick(cards[3], 3)}\r\n                    isSelected={selectedCardIndex === 3}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"col-start-2 col-span-1 row-start-2 row-span-1 flex justify-center items-center\">\r\n              {cards[4] && (\r\n                <motion.div\r\n                  custom={4}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[4]}\r\n                    isFlipped={flippedCards[4]}\r\n                    onClick={() => handleCardClick(cards[4], 4)}\r\n                    isSelected={selectedCardIndex === 4}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"col-start-5 col-span-1 row-start-2 row-span-1 flex justify-center items-center\">\r\n              {cards[5] && (\r\n                <motion.div\r\n                  custom={5}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[5]}\r\n                    isFlipped={flippedCards[5]}\r\n                    onClick={() => handleCardClick(cards[5], 5)}\r\n                    isSelected={selectedCardIndex === 5}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Phần cột bên phải (staff) */}\r\n            <div className=\"col-start-6 col-span-1 row-start-1 row-span-1 flex justify-center items-center\">\r\n              {cards[6] && (\r\n                <motion.div\r\n                  custom={6}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[6]}\r\n                    isFlipped={flippedCards[6]}\r\n                    onClick={() => handleCardClick(cards[6], 6)}\r\n                    isSelected={selectedCardIndex === 6}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"col-start-6 col-span-1 row-start-2 row-span-1 flex justify-center items-center\">\r\n              {cards[7] && (\r\n                <motion.div\r\n                  custom={7}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[7]}\r\n                    isFlipped={flippedCards[7]}\r\n                    onClick={() => handleCardClick(cards[7], 7)}\r\n                    isSelected={selectedCardIndex === 7}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"col-start-6 col-span-1 row-start-3 row-span-1 flex justify-center items-center\">\r\n              {cards[8] && (\r\n                <motion.div\r\n                  custom={8}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[8]}\r\n                    isFlipped={flippedCards[8]}\r\n                    onClick={() => handleCardClick(cards[8], 8)}\r\n                    isSelected={selectedCardIndex === 8}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"col-start-6 col-span-1 row-start-4 row-span-1 flex justify-center items-center\">\r\n              {cards[9] && (\r\n                <motion.div\r\n                  custom={9}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[9]}\r\n                    isFlipped={flippedCards[9]}\r\n                    onClick={() => handleCardClick(cards[9], 9)}\r\n                    isSelected={selectedCardIndex === 9}\r\n                    size=\"small\"\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Thông tin vị trí */}\r\n            <div className=\"absolute -bottom-32 sm:-bottom-24 left-0 right-0 text-center\">\r\n              <div className=\"flex justify-center flex-wrap gap-2 max-w-2xl mx-auto\">\r\n                {cardPositions.map((position, index) => (\r\n                  <div \r\n                    key={index}\r\n                    className={`py-1 px-3 rounded-lg text-xs cursor-pointer transition-colors ${\r\n                      selectedCardIndex === index \r\n                        ? 'bg-[#9370db]/50 text-white' \r\n                        : 'bg-white/5 text-gray-300 hover:bg-white/10'\r\n                    }`}\r\n                    onClick={() => handleCardClick(cards[index], index)}\r\n                  >\r\n                    {position.name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      \r\n      case 'love':\r\n        // Trải bài tình yêu với 6 lá bài \r\n        return (\r\n          <div className=\"flex flex-col items-center space-y-6\">\r\n            <div className=\"flex justify-center space-x-16 md:space-x-24\">\r\n              {[0, 1].map(index => (\r\n                <motion.div\r\n                  key={index}\r\n                  custom={index}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                  className=\"flex flex-col items-center\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[index]}\r\n                    isFlipped={flippedCards[index]}\r\n                    onClick={() => handleCardClick(cards[index], index)}\r\n                    isSelected={selectedCardIndex === index}\r\n                    size=\"medium\"\r\n                  />\r\n                  <div className=\"mt-3 text-center\">\r\n                    <p className=\"text-white font-medium text-sm\">{cardPositions[index]?.name}</p>\r\n                    <p className=\"text-gray-400 text-xs max-w-[150px]\">{cardPositions[index]?.description}</p>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-5 md:gap-8\">\r\n              {[2, 3, 4, 5].map(index => (\r\n                <motion.div\r\n                  key={index}\r\n                  custom={index}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                  className=\"flex flex-col items-center\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[index]}\r\n                    isFlipped={flippedCards[index]}\r\n                    onClick={() => handleCardClick(cards[index], index)}\r\n                    isSelected={selectedCardIndex === index}\r\n                    size=\"small\"\r\n                  />\r\n                  <div className=\"mt-3 text-center\">\r\n                    <p className=\"text-white font-medium text-sm\">{cardPositions[index]?.name}</p>\r\n                    <p className=\"text-gray-400 text-xs max-w-[150px]\">{cardPositions[index]?.description}</p>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n        \r\n      case 'career':\r\n        // Trải bài sự nghiệp với 6 lá bài\r\n        return (\r\n          <div className=\"flex flex-col items-center space-y-8\">\r\n            <motion.div\r\n              custom={0}\r\n              variants={cardVariants}\r\n              initial=\"initial\"\r\n              animate=\"animate\"\r\n              exit=\"exit\"\r\n              className=\"flex flex-col items-center\"\r\n            >\r\n              <TarotCard\r\n                card={cards[0]}\r\n                isFlipped={flippedCards[0]}\r\n                onClick={() => handleCardClick(cards[0], 0)}\r\n                isSelected={selectedCardIndex === 0}\r\n                size=\"medium\"\r\n              />\r\n              <div className=\"mt-3 text-center\">\r\n                <p className=\"text-white font-medium text-sm\">{cardPositions[0]?.name}</p>\r\n                <p className=\"text-gray-400 text-xs max-w-[150px]\">{cardPositions[0]?.description}</p>\r\n              </div>\r\n            </motion.div>\r\n            \r\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-5 md:gap-8\">\r\n              {[1, 2, 3, 4, 5].map(index => (\r\n                <motion.div\r\n                  key={index}\r\n                  custom={index}\r\n                  variants={cardVariants}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"exit\"\r\n                  className=\"flex flex-col items-center\"\r\n                >\r\n                  <TarotCard\r\n                    card={cards[index]}\r\n                    isFlipped={flippedCards[index]}\r\n                    onClick={() => handleCardClick(cards[index], index)}\r\n                    isSelected={selectedCardIndex === index}\r\n                    size=\"small\"\r\n                  />\r\n                  <div className=\"mt-3 text-center\">\r\n                    <p className=\"text-white font-medium text-sm\">{cardPositions[index]?.name}</p>\r\n                    <p className=\"text-gray-400 text-xs max-w-[150px]\">{cardPositions[index]?.description}</p>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n        \r\n      default:\r\n        return (\r\n          <div className=\"flex justify-center space-x-4 flex-wrap\">\r\n            {cards.map((card, index) => (\r\n              <motion.div\r\n                key={index}\r\n                custom={index}\r\n                variants={cardVariants}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n                exit=\"exit\"\r\n                className=\"m-2\"\r\n              >\r\n                <TarotCard\r\n                  card={card}\r\n                  isFlipped={flippedCards[index]}\r\n                  onClick={() => handleCardClick(card, index)}\r\n                  isSelected={selectedCardIndex === index}\r\n                  size=\"small\"\r\n                />\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n        className=\"w-full max-w-6xl mx-auto\"\r\n      >\r\n        <div className=\"text-center mb-8\">\r\n          <h2 className=\"text-2xl font-bold text-white tracking-tight\">{spreadTitle}</h2>\r\n          <p className=\"text-gray-300 tracking-tight\">{spreadDescription}</p>\r\n        </div>\r\n        \r\n        <div className=\"relative\">\r\n          {getSpreadLayout()}\r\n        </div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nTarotSpread.propTypes = {\r\n  cards: PropTypes.array,\r\n  spreadType: PropTypes.oneOf(['three-card', 'celtic-cross', 'love', 'career']),\r\n  onCardClick: PropTypes.func,\r\n  selectedCardIndex: PropTypes.number\r\n};\r\n\r\nexport default TarotSpread; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\n\r\n/**\r\n * Component hiển thị kết quả trải bài Tarot\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Array} props.cards - Các lá bài đã trải\r\n * @param {string} props.spreadType - Loại trải bài\r\n * @param {string} props.question - Câu hỏi của người dùng\r\n * @param {string} props.result - Kết quả phân tích\r\n */\r\nconst TarotReadingResult = ({ cards = [], spreadType, question, result }) => {\r\n  // Xử lý xuống dòng trong kết quả\r\n  const formattedResult = result && result.split('\\n').map((line, index) => (\r\n    <React.Fragment key={index}>\r\n      {line}\r\n      <br />\r\n    </React.Fragment>\r\n  ));\r\n  \r\n  return (\r\n    <div className=\"bg-white/5 backdrop-blur-sm border border-purple-900/20 rounded-xl p-6 md:p-8 shadow-lg\">\r\n      <h2 className=\"text-2xl font-bold text-white mb-4 tracking-tight\">Kết quả trải bài</h2>\r\n      \r\n      {/* Thông tin cơ bản về trải bài */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n          <div className=\"bg-white/10 rounded-lg p-4\">\r\n            <h3 className=\"text-lg font-medium text-white mb-2 tracking-tight\">Loại trải bài</h3>\r\n            <p className=\"text-gray-300 tracking-tight\">\r\n              {spreadType === 'three-card' && 'Trải Bài Ba Lá (Quá khứ - Hiện tại - Tương lai)'}\r\n              {spreadType === 'celtic-cross' && 'Celtic Cross'}\r\n              {spreadType === 'love' && 'Trải Bài Tình Yêu'}\r\n              {spreadType === 'career' && 'Trải Bài Sự Nghiệp'}\r\n              {!['three-card', 'celtic-cross', 'love', 'career'].includes(spreadType) && 'Trải bài tùy chỉnh'}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"bg-white/10 rounded-lg p-4\">\r\n            <h3 className=\"text-lg font-medium text-white mb-2 tracking-tight\">Số lá bài</h3>\r\n            <p className=\"text-gray-300 tracking-tight\">{cards.length} lá bài</p>\r\n          </div>\r\n        </div>\r\n        \r\n        {question && (\r\n          <div className=\"bg-white/10 rounded-lg p-4 mb-6\">\r\n            <h3 className=\"text-lg font-medium text-white mb-2 tracking-tight\">Câu hỏi của bạn</h3>\r\n            <p className=\"text-gray-300 italic tracking-tight\">{question}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Kết quả chi tiết */}\r\n      <div className=\"mb-6\">\r\n        <h3 className=\"text-xl font-medium text-white mb-4 tracking-tight\">\r\n          <span className=\"inline-block mr-2\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-[#9370db] inline\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n          </span>\r\n          Giải thích trải bài\r\n        </h3>\r\n        \r\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-lg p-5 border border-purple-900/20\">\r\n          <div className=\"text-gray-300 tracking-tight leading-relaxed whitespace-pre-line\">\r\n            {formattedResult || 'Không có kết quả phân tích.'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Lời khuyên & Phần kết */}\r\n      <div>\r\n        <h3 className=\"text-xl font-medium text-white mb-4 tracking-tight\">\r\n          <span className=\"inline-block mr-2\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-[#9370db] inline\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n          </span>\r\n          Lời khuyên\r\n        </h3>\r\n        \r\n        <div className=\"bg-gradient-to-r from-[#9370db]/20 to-[#8a2be2]/20 rounded-lg p-5 border border-[#9370db]/30\">\r\n          <p className=\"text-white tracking-tight leading-relaxed\">\r\n            Hãy nhớ rằng Tarot chỉ mang tính gợi ý, giúp bạn nhìn nhận vấn đề từ nhiều góc độ khác nhau. Quyết định cuối cùng luôn thuộc về bạn. Suy ngẫm về những thông điệp mà các lá bài mang lại và áp dụng chúng một cách khôn ngoan vào cuộc sống của mình.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Social sharing buttons */}\r\n      <motion.div \r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.4, delay: 0.2 }}\r\n        className=\"mt-8 text-center\"\r\n      >\r\n        <p className=\"text-gray-400 mb-3 text-sm tracking-tight\">Chia sẻ kết quả trải bài</p>\r\n        <div className=\"flex justify-center gap-4\">\r\n          <button className=\"bg-[#4267B2]/20 hover:bg-[#4267B2]/30 text-white p-3 rounded-full transition-colors\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path d=\"M13.397 20.997v-8.196h2.765l.411-3.209h-3.176V7.548c0-.926.258-1.56 1.587-1.56h1.684V3.127A22.336 22.336 0 0014.201 3c-2.444 0-4.122 1.492-4.122 4.231v2.355H7.332v3.209h2.753v8.202h3.312z\"></path>\r\n            </svg>\r\n          </button>\r\n          <button className=\"bg-[#1DA1F2]/20 hover:bg-[#1DA1F2]/30 text-white p-3 rounded-full transition-colors\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path d=\"M19.633 7.997c.013.175.013.349.013.523 0 5.325-4.053 11.461-11.46 11.461-2.282 0-4.402-.661-6.186-1.809.324.037.636.05.973.05a8.07 8.07 0 0 0 5.001-1.721 4.036 4.036 0 0 1-3.767-2.793c.249.037.499.062.761.062.361 0 .724-.05 1.061-.137a4.027 4.027 0 0 1-3.23-3.953v-.05c.537.299 1.16.486 1.82.511a4.022 4.022 0 0 1-1.796-3.354c0-.748.199-1.434.548-2.032a11.457 11.457 0 0 0 8.306 4.215c-.062-.3-.1-.599-.1-.899a4.026 4.026 0 0 1 4.028-4.028c1.16 0 2.207.486 2.943 1.272a7.957 7.957 0 0 0 2.556-.973 4.02 4.02 0 0 1-1.771 2.22 8.073 8.073 0 0 0 2.319-.624 8.645 8.645 0 0 1-2.019 2.083z\"></path>\r\n            </svg>\r\n          </button>\r\n          <button className=\"bg-[#25D366]/20 hover:bg-[#25D366]/30 text-white p-3 rounded-full transition-colors\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path d=\"M12.031 6.172c-3.181 0-5.767 2.586-5.768 5.766-.001 1.298.38 2.27 1.019 3.287l-.582 2.128 2.182-.573c.978.58 1.911.928 3.145.929 3.178 0 5.767-2.587 5.768-5.766.001-3.187-2.575-5.77-5.764-5.771zm3.392 8.244c-.144.405-.837.774-1.17.824-.299.045-.677.063-1.092-.069-.252-.08-.575-.187-.988-.365-1.739-.751-2.874-2.502-2.961-2.617-.087-.116-.708-.94-.708-1.793s.448-1.273.607-1.446c.159-.173.346-.217.462-.217l.332.006c.106.005.249-.04.39.298.144.347.491 1.2.534 1.287.043.087.072.188.014.304-.058.116-.087.188-.173.289l-.26.304c-.087.086-.177.18-.076.354.101.174.449.741.964 1.201.662.591 1.221.774 1.394.86s.274.072.376-.043c.101-.116.433-.506.549-.68.116-.173.231-.145.39-.087s1.011.477 1.184.564.289.13.332.202c.045.72.045.36-.072.506zm-3.423-14.416c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm.029 18.88c-1.161 0-2.305-.292-3.318-.844l-3.677.964.984-3.595c-.607-1.052-.927-2.246-.926-3.468.001-3.825 3.113-6.937 6.937-6.937 1.856.001 3.598.723 4.907 2.034 1.31 1.311 2.031 3.054 2.03 4.908-.001 3.825-3.113 6.938-6.937 6.938z\"></path>\r\n            </svg>\r\n          </button>\r\n          <button className=\"bg-white/10 hover:bg-white/20 text-white p-3 rounded-full transition-colors\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\r\n              <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTarotReadingResult.propTypes = {\r\n  cards: PropTypes.array,\r\n  spreadType: PropTypes.string,\r\n  question: PropTypes.string,\r\n  result: PropTypes.string\r\n};\r\n\r\nexport default TarotReadingResult; ","/**\r\n * Dữ liệu các lá bài Tarot\r\n */\r\nexport const tarotCards = [\r\n  {\r\n    id: 1,\r\n    name: \"The Fool\",\r\n    nameVi: \"Kẻ Ngốc\",\r\n    suit: \"Major Arcana\",\r\n    value: 0,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-fool.png\",\r\n    keywords: [\"Khởi đầu mới\", \"Phiêu lưu\", \"Vô tư\", \"Tiềm năng\"],\r\n    meaning: \"Một khởi đầu mới đang đến, mang theo cơ hội và tiềm năng. Thời điểm để bạn dám mạo hiểm, khám phá những điều mới mẻ. Hãy tin tưởng vào trực giác và đi theo con đường riêng của mình.\",\r\n    reversedMeaning: \"Bạn đang hành động thiếu suy nghĩ hoặc sợ hãi những bước đi mới. Cần cẩn trọng hơn trong các quyết định, tránh nhìn nhận mọi thứ quá đơn giản.\",\r\n    advice: \"Hãy đón nhận cuộc phiêu lưu mới với tâm trí cởi mở và vô tư. Niềm tin và sự lạc quan sẽ dẫn dắt bạn đi qua những ngã rẽ cuộc đời.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"The Magician\",\r\n    nameVi: \"Nhà Ảo Thuật\",\r\n    suit: \"Major Arcana\",\r\n    value: 1,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-magician.png\",\r\n    keywords: [\"Ý chí\", \"Sáng tạo\", \"Khởi đầu\", \"Khả năng\"],\r\n    meaning: \"Bạn đang có tất cả những công cụ cần thiết để thành công. Đây là thời điểm để biến ý tưởng thành hành động, sử dụng sức mạnh ý chí để tạo nên thực tại mới.\",\r\n    reversedMeaning: \"Bạn có thể đang lừa dối bản thân hoặc người khác, hoặc chưa tận dụng hết tiềm năng của mình. Cần suy xét lại động cơ và phương pháp.\",\r\n    advice: \"Hãy nhận ra rằng bạn có mọi nguồn lực cần thiết. Kết nối tâm trí với trực giác để đạt được những điều tưởng chừng không thể.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"The High Priestess\",\r\n    nameVi: \"Nữ Tư Tế\",\r\n    suit: \"Major Arcana\",\r\n    value: 2,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-high-priestess.png\",\r\n    keywords: [\"Trực giác\", \"Vô thức\", \"Bí ẩn\", \"Nội tâm\"],\r\n    meaning: \"Đây là thời điểm lắng nghe tiếng nói bên trong. Hãy tin vào trực giác của bạn, vì bạn đang cảm nhận được những điều mà lý trí không thể giải thích.\",\r\n    reversedMeaning: \"Bạn đang phớt lờ tiếng nói nội tâm hoặc giữ lại quá nhiều bí mật. Cần cân bằng giữa lý trí và trực giác.\",\r\n    advice: \"Dành thời gian tĩnh lặng để lắng nghe trực giác. Những câu trả lời bạn tìm kiếm đang nằm trong chính bạn.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"The Empress\",\r\n    nameVi: \"Hoàng Hậu\",\r\n    suit: \"Major Arcana\",\r\n    value: 3,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-empress.png\",\r\n    keywords: [\"Sáng tạo\", \"Phong phú\", \"Nuôi dưỡng\", \"Sinh sản\"],\r\n    meaning: \"Bạn đang bước vào giai đoạn sinh sôi và sáng tạo. Hãy nuôi dưỡng ý tưởng, dự án hoặc mối quan hệ của bạn. Đây là thời kỳ sung túc và đầy tiềm năng.\",\r\n    reversedMeaning: \"Bạn có thể đang quan tâm quá mức đến người khác mà quên đi nhu cầu của bản thân, hoặc đang gặp vấn đề với việc biểu đạt tính nữ tính.\",\r\n    advice: \"Hãy kết nối với thiên nhiên và vẻ đẹp xung quanh. Trân trọng sự dồi dào trong cuộc sống và cho phép bản thân sáng tạo không giới hạn.\"\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"The Emperor\",\r\n    nameVi: \"Hoàng Đế\",\r\n    suit: \"Major Arcana\",\r\n    value: 4,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-emperor.png\",\r\n    keywords: [\"Quyền lực\", \"Ổn định\", \"Lãnh đạo\", \"Cấu trúc\"],\r\n    meaning: \"Đây là thời điểm thiết lập trật tự và cấu trúc trong cuộc sống của bạn. Hãy thể hiện quyền lãnh đạo, kiểm soát và tự tin vào khả năng kiến tạo thế giới của mình.\",\r\n    reversedMeaning: \"Bạn có thể đang quá cứng nhắc hoặc lạm dụng quyền lực. Cần cân bằng giữa kiểm soát và linh hoạt.\",\r\n    advice: \"Tạo dựng nền tảng vững chắc cho các mục tiêu của bạn. Đưa ra quyết định với lòng tin vào bản thân và khả năng lãnh đạo của mình.\"\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"The Hierophant\",\r\n    nameVi: \"Giáo Hoàng\",\r\n    suit: \"Major Arcana\",\r\n    value: 5,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-hierophant.png\",\r\n    keywords: [\"Truyền thống\", \"Tâm linh\", \"Đạo sư\", \"Sự tuân thủ\"],\r\n    meaning: \"Bạn đang cần sự hướng dẫn từ các giá trị truyền thống hoặc tâm linh. Đây là thời điểm tuân theo quy tắc, học hỏi từ người khôn ngoan hơn.\",\r\n    reversedMeaning: \"Bạn có thể đang chống đối lại những quy ước xã hội hoặc cảm thấy bị kìm hãm bởi truyền thống. Cần tìm con đường riêng trong khuôn khổ.\",\r\n    advice: \"Tìm kiếm sự khôn ngoan từ các nguồn đáng tin cậy. Kết nối với những giá trị sâu sắc để tìm thấy ý nghĩa và mục đích.\"\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"The Lovers\",\r\n    nameVi: \"Cặp Đôi\",\r\n    suit: \"Major Arcana\",\r\n    value: 6,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-lovers.png\",\r\n    keywords: [\"Tình yêu\", \"Lựa chọn\", \"Cân bằng\", \"Kết nối\"],\r\n    meaning: \"Bạn đang đối mặt với một lựa chọn quan trọng, có thể liên quan đến tình yêu hoặc giá trị cốt lõi. Đây là lúc lắng nghe trái tim và tìm kiếm sự cân bằng.\",\r\n    reversedMeaning: \"Bạn có thể đang tránh né một quyết định quan trọng hoặc trải qua sự mất cân bằng trong mối quan hệ. Cần đối mặt với sự thật về những giá trị của bạn.\",\r\n    advice: \"Lựa chọn con đường phù hợp với giá trị cốt lõi của bạn. Tìm kiếm sự hài hòa giữa lý trí và cảm xúc trong các mối quan hệ.\"\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"The Chariot\",\r\n    nameVi: \"Chiến Xa\",\r\n    suit: \"Major Arcana\",\r\n    value: 7,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-chariot.png\",\r\n    keywords: [\"Quyết tâm\", \"Ý chí\", \"Chiến thắng\", \"Hành động\"],\r\n    meaning: \"Bạn đang có đủ quyết tâm và ý chí để vượt qua mọi thử thách. Đây là thời điểm kiểm soát cảm xúc và hành động quyết đoán để đạt được mục tiêu.\",\r\n    reversedMeaning: \"Bạn có thể đang thiếu phương hướng hoặc không thể kiểm soát các lực đối lập trong cuộc sống. Cần tập trung lại năng lượng và xác định mục tiêu rõ ràng.\",\r\n    advice: \"Hãy tự tin vào khả năng vượt qua mọi trở ngại. Khi tập trung ý chí và kiểm soát cảm xúc, bạn sẽ đi đến chiến thắng.\"\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Strength\",\r\n    nameVi: \"Sức Mạnh\",\r\n    suit: \"Major Arcana\",\r\n    value: 8,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/strength.png\",\r\n    keywords: [\"Dũng cảm\", \"Kiên nhẫn\", \"Kiểm soát\", \"Từ bi\"],\r\n    meaning: \"Bạn đang có sức mạnh nội tâm để đối phó với thử thách. Đây là lúc kiểm soát bản năng bằng lòng nhân ái và kiên nhẫn, không phải bằng vũ lực.\",\r\n    reversedMeaning: \"Bạn có thể đang nghi ngờ khả năng của mình hoặc để cảm xúc chi phối. Cần tìm lại sự cân bằng giữa sức mạnh và nhẹ nhàng.\",\r\n    advice: \"Hãy nhớ rằng sức mạnh thực sự đến từ lòng từ bi và kiên nhẫn. Đối mặt với nỗi sợ hãi bằng dũng khí và sự tự tin.\"\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"The Hermit\",\r\n    nameVi: \"Ẩn Sĩ\",\r\n    suit: \"Major Arcana\",\r\n    value: 9,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-hermit.png\",\r\n    keywords: [\"Nội tỉnh\", \"Suy ngẫm\", \"Cô độc\", \"Tìm kiếm\"],\r\n    meaning: \"Đây là thời gian để rút lui và tìm kiếm câu trả lời bên trong. Bạn cần không gian riêng để suy ngẫm và tìm kiếm sự thật và khôn ngoan.\",\r\n    reversedMeaning: \"Bạn có thể đang cô lập mình quá mức hoặc từ chối lắng nghe lời khuyên cần thiết. Cần cân bằng giữa thời gian một mình và kết nối với người khác.\",\r\n    advice: \"Tìm thời gian để suy ngẫm về hành trình của bạn. Ánh sáng trí tuệ bên trong sẽ dẫn lối cho bạn qua bóng tối.\"\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Wheel of Fortune\",\r\n    nameVi: \"Bánh Xe Vận Mệnh\",\r\n    suit: \"Major Arcana\",\r\n    value: 10,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/wheel-of-fortune.png\",\r\n    keywords: [\"Thay đổi\", \"Vận mệnh\", \"Cơ hội\", \"Chu kỳ\"],\r\n    meaning: \"Bạn đang ở giai đoạn chuyển tiếp, bánh xe vận mệnh đang xoay chuyển. Đây là thời điểm của những thay đổi không lường trước, đôi khi là may mắn bất ngờ.\",\r\n    reversedMeaning: \"Bạn có thể đang đối mặt với những thay đổi ngoài tầm kiểm soát hoặc cảm thấy bị mắc kẹt trong tình huống hiện tại. Cần chấp nhận và thích nghi.\",\r\n    advice: \"Đón nhận những thay đổi như một phần tất yếu của cuộc sống. Giữ thăng bằng khi bánh xe vận mệnh xoay chuyển.\"\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Justice\",\r\n    nameVi: \"Công Lý\",\r\n    suit: \"Major Arcana\",\r\n    value: 11,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/justice.png\",\r\n    keywords: [\"Công bằng\", \"Sự thật\", \"Luật pháp\", \"Nguyên nhân và kết quả\"],\r\n    meaning: \"Bạn đang trong thời điểm phải đối mặt với hậu quả của hành động trước đây. Đây là lúc cân nhắc cẩn thận, hành động công bằng và tìm kiếm sự thật.\",\r\n    reversedMeaning: \"Bạn có thể đang trải qua sự bất công hoặc không thành thật với chính mình. Cần đối mặt với sự thật và chịu trách nhiệm cho hành động của mình.\",\r\n    advice: \"Nhìn nhận mọi việc một cách khách quan và công bằng. Sự thật và công lý sẽ chiếu sáng con đường phía trước.\"\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"The Hanged Man\",\r\n    nameVi: \"Người Treo Ngược\",\r\n    suit: \"Major Arcana\",\r\n    value: 12,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-hanged-man.png\",\r\n    keywords: [\"Dừng lại\", \"Nhìn nhận mới\", \"Hy sinh\", \"Buông bỏ\"],\r\n    meaning: \"Đây là thời điểm để dừng lại, quan sát từ góc nhìn khác và chấp nhận để mọi việc diễn ra tự nhiên. Có thể bạn cần hy sinh một điều gì đó để đạt được hiểu biết sâu sắc hơn.\",\r\n    reversedMeaning: \"Bạn có thể đang kháng cự lại sự thay đổi cần thiết hoặc hy sinh vô ích. Cần xem xét lại quan điểm và thái độ của mình.\",\r\n    advice: \"Đôi khi, dừng lại là cách tốt nhất để tiến lên. Chấp nhận thời gian chờ đợi và nhìn nhận vấn đề từ góc độ mới.\"\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Death\",\r\n    nameVi: \"Tử Thần\",\r\n    suit: \"Major Arcana\",\r\n    value: 13,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/death.png\",\r\n    keywords: [\"Kết thúc\", \"Chuyển đổi\", \"Đổi mới\", \"Buông bỏ\"],\r\n    meaning: \"Một chu kỳ trong đời bạn đang kết thúc, tạo điều kiện cho sự khởi đầu mới. Đây là thời điểm để buông bỏ những gì không còn phù hợp và chấp nhận sự thay đổi.\",\r\n    reversedMeaning: \"Bạn có thể đang kháng cự lại những thay đổi cần thiết hoặc trải qua sự chuyển đổi không trọn vẹn. Cần đối mặt với nỗi sợ hãi về sự kết thúc.\",\r\n    advice: \"Đừng sợ hãi sự kết thúc, vì nó tạo điều kiện cho những khởi đầu mới. Hãy để những gì cũ kỹ ra đi để đón nhận sự tái sinh.\"\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Temperance\",\r\n    nameVi: \"Tiết Chế\",\r\n    suit: \"Major Arcana\",\r\n    value: 14,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/temperance.png\",\r\n    keywords: [\"Cân bằng\", \"Điều độ\", \"Kiên nhẫn\", \"Hòa hợp\"],\r\n    meaning: \"Bạn đang trong giai đoạn cần tìm sự cân bằng và hòa hợp. Đây là thời điểm để kiên nhẫn, tiết chế và tìm con đường trung dung.\",\r\n    reversedMeaning: \"Bạn có thể đang mất cân bằng hoặc thiếu kiên nhẫn. Cần đánh giá lại cách bạn sử dụng năng lượng và thời gian.\",\r\n    advice: \"Tìm kiếm sự hài hòa giữa các mặt đối lập trong cuộc sống. Kiên nhẫn và điều độ sẽ mang lại sự cân bằng nội tâm.\"\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"The Devil\",\r\n    nameVi: \"Quỷ Dữ\",\r\n    suit: \"Major Arcana\",\r\n    value: 15,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-devil.png\",\r\n    keywords: [\"Ràng buộc\", \"Nghiện ngập\", \"Vật chất\", \"Bóng tối\"],\r\n    meaning: \"Bạn có thể đang bị ràng buộc bởi một tình huống hoặc thói quen tiêu cực. Đây là thời điểm để nhận ra những xiềng xích vô hình và tìm cách giải phóng bản thân.\",\r\n    reversedMeaning: \"Bạn đang bắt đầu phá vỡ những ràng buộc và hiểu rõ hơn về những ham muốn tiêu cực. Tiếp tục tìm kiếm sự tự do nội tâm.\",\r\n    advice: \"Nhận ra những gì thực sự ràng buộc bạn. Hiểu rằng bạn có quyền lực để phá vỡ xiềng xích và tự giải phóng mình.\"\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"The Tower\",\r\n    nameVi: \"Tòa Tháp\",\r\n    suit: \"Major Arcana\",\r\n    value: 16,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-tower.png\",\r\n    keywords: [\"Biến động\", \"Khủng hoảng\", \"Thức tỉnh\", \"Giải phóng\"],\r\n    meaning: \"Bạn đang trải qua hoặc sắp trải qua một sự thay đổi đột ngột và mạnh mẽ. Những niềm tin và cấu trúc cũ sẽ sụp đổ để tạo nền tảng cho điều mới mẻ hơn, chân thật hơn.\",\r\n    reversedMeaning: \"Bạn có thể đang kháng cự lại những thay đổi không thể tránh khỏi hoặc cố gắng kiểm soát một tình huống hỗn loạn. Cần chấp nhận sự thay đổi là cần thiết.\",\r\n    advice: \"Khi những cấu trúc cũ sụp đổ, hãy nhìn thấy cơ hội để xây dựng nền tảng mới vững chắc hơn. Đón nhận sự thay đổi như một hình thức giải phóng.\"\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"The Star\",\r\n    nameVi: \"Ngôi Sao\",\r\n    suit: \"Major Arcana\",\r\n    value: 17,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-star.png\",\r\n    keywords: [\"Hy vọng\", \"Niềm tin\", \"Cảm hứng\", \"Tươi mới\"],\r\n    meaning: \"Sau những thời kỳ khó khăn, bạn đang bước vào giai đoạn hy vọng và tươi mới. Đây là thời điểm để lạc quan, có niềm tin và nhìn về tương lai với sự tự tin.\",\r\n    reversedMeaning: \"Bạn có thể đang cảm thấy mất niềm tin hoặc rơi vào trạng thái thất vọng. Cần tìm lại hy vọng và cảm hứng từ bên trong.\",\r\n    advice: \"Cho phép bản thân tin tưởng vào điều tốt đẹp. Như các vì sao luôn tỏa sáng trong bóng tối, hy vọng sẽ dẫn lối cho bạn vượt qua mọi khó khăn.\"\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"The Moon\",\r\n    nameVi: \"Mặt Trăng\",\r\n    suit: \"Major Arcana\",\r\n    value: 18,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-moon.png\",\r\n    keywords: [\"Ảo tưởng\", \"Sợ hãi\", \"Vô thức\", \"Trực giác\"],\r\n    meaning: \"Bạn đang trong giai đoạn không chắc chắn, khi mọi thứ không phải như vẻ bề ngoài. Đây là thời điểm đối mặt với nỗi sợ hãi, lắng nghe trực giác và khám phá vô thức.\",\r\n    reversedMeaning: \"Bạn có thể đang vượt qua nỗi sợ hãi hoặc nhận ra những ảo tưởng. Sự rõ ràng đang dần hiện ra sau thời kỳ bối rối.\",\r\n    advice: \"Tin tưởng vào trực giác khi bạn không thể nhìn thấy đường đi rõ ràng. Trong bóng tối của sự không chắc chắn, hãy để ánh trăng dẫn lối.\"\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"The Sun\",\r\n    nameVi: \"Mặt Trời\",\r\n    suit: \"Major Arcana\",\r\n    value: 19,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-sun.png\",\r\n    keywords: [\"Thành công\", \"Niềm vui\", \"Năng lượng\", \"Rõ ràng\"],\r\n    meaning: \"Bạn đang bước vào thời kỳ thành công, niềm vui và rõ ràng. Mọi thứ đang sáng sủa lên, mang lại năng lượng tích cực và sự lạc quan vào cuộc sống của bạn.\",\r\n    reversedMeaning: \"Bạn có thể đang trải qua sự thiếu rõ ràng hoặc hạnh phúc tạm thời. Cần tìm lại niềm vui và lạc quan từ bên trong.\",\r\n    advice: \"Tận hưởng ánh sáng và niềm vui trong cuộc sống. Như mặt trời luôn tỏa sáng sau mỗi đêm dài, hạnh phúc và thành công đang chờ đón bạn.\"\r\n  },\r\n  {\r\n    id: 21,\r\n    name: \"Judgement\",\r\n    nameVi: \"Phán Xét\",\r\n    suit: \"Major Arcana\",\r\n    value: 20,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/judgement.png\",\r\n    keywords: [\"Tái sinh\", \"Thức tỉnh\", \"Tha thứ\", \"Quyết định cuối cùng\"],\r\n    meaning: \"Bạn đang trong giai đoạn thức tỉnh tâm linh, nhìn nhận quá khứ và sẵn sàng cho một khởi đầu mới. Đây là thời điểm để tha thứ, học hỏi từ quá khứ và trở nên trọn vẹn hơn.\",\r\n    reversedMeaning: \"Bạn có thể đang trì hoãn một quyết định quan trọng hoặc từ chối đối mặt với những hành động trong quá khứ. Cần tự đánh giá và tha thứ để tiến lên.\",\r\n    advice: \"Lắng nghe tiếng gọi bên trong khiến bạn thức tỉnh. Đây là thời điểm để tha thứ cho quá khứ và sẵn sàng cho sự tái sinh tinh thần.\"\r\n  },\r\n  {\r\n    id: 22,\r\n    name: \"The World\",\r\n    nameVi: \"Thế Giới\",\r\n    suit: \"Major Arcana\",\r\n    value: 21,\r\n    imageUrl: \"https://www.trustedtarot.com/img/cards/the-world.png\",\r\n    keywords: [\"Hoàn thành\", \"Thành tựu\", \"Trọn vẹn\", \"Chu kỳ\"],\r\n    meaning: \"Bạn đã đạt đến điểm hoàn thành một chu kỳ quan trọng trong cuộc đời. Đây là thời điểm tận hưởng thành tựu, cảm thấy trọn vẹn và chuẩn bị cho các cuộc hành trình mới.\",\r\n    reversedMeaning: \"Bạn có thể đang trải qua sự chậm tiến hoặc cảm giác không hoàn thành. Cần xác định điều gì đang thiếu để khép lại chu kỳ này.\",\r\n    advice: \"Ăn mừng những thành tựu và khép lại những chu kỳ đã hoàn thành. Nhận ra rằng mỗi kết thúc là khởi đầu cho một cuộc hành trình mới.\"\r\n  }\r\n];\r\n\r\n// Xuất ra một số hàm utility để làm việc với bài Tarot\r\nexport const getRandomCard = () => {\r\n  const randomIndex = Math.floor(Math.random() * tarotCards.length);\r\n  return tarotCards[randomIndex];\r\n};\r\n\r\nexport const getCardById = (id) => {\r\n  return tarotCards.find(card => card.id === id);\r\n};\r\n\r\nexport const getCardByName = (name) => {\r\n  return tarotCards.find(card => card.name.toLowerCase() === name.toLowerCase());\r\n}; ","import { useState, useEffect } from 'react';\r\nimport { tarotCards } from '../data/tarotCardsData';\r\n\r\n/**\r\n * Custom hook để quản lý trạng thái trải bài Tarot\r\n * \r\n * @param {string} initialSpreadType - Loại trải bài mặc định\r\n * @returns {Object} Các state và function để quản lý trải bài\r\n */\r\nexport const useTarotReading = (initialSpreadType = 'three-card') => {\r\n  // Trạng thái\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [spreadType, setSpreadType] = useState(initialSpreadType);\r\n  const [question, setQuestion] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  \r\n  // Khởi tạo spreadType từ prop initialSpreadType\r\n  useEffect(() => {\r\n    if (initialSpreadType && ['three-card', 'celtic-cross', 'love', 'career'].includes(initialSpreadType)) {\r\n      setSpreadType(initialSpreadType);\r\n    }\r\n  }, [initialSpreadType]);\r\n  \r\n  // Xáo bài và chọn số lượng bài theo loại trải\r\n  const shuffleAndDrawCards = () => {\r\n    try {\r\n      // Xáo trộn bài\r\n      const shuffledCards = [...tarotCards].sort(() => Math.random() - 0.5);\r\n      \r\n      // Xác định số lá bài cần rút theo loại trải\r\n      let cardCount = 3; // Mặc định là 3 lá\r\n      \r\n      switch (spreadType) {\r\n        case 'three-card':\r\n          cardCount = 3;\r\n          break;\r\n        case 'celtic-cross':\r\n          cardCount = 10;\r\n          break;\r\n        case 'love':\r\n        case 'career':\r\n          cardCount = 6;\r\n          break;\r\n        default:\r\n          cardCount = 3;\r\n      }\r\n      \r\n      // Rút đúng số lá bài cần thiết\r\n      const drawnCards = shuffledCards.slice(0, cardCount).map(card => ({\r\n        ...card,\r\n        isReversed: Math.random() > 0.7 // 30% khả năng lá bài bị ngược\r\n      }));\r\n      \r\n      return drawnCards;\r\n    } catch (err) {\r\n      console.error('Error shuffling and drawing cards:', err);\r\n      throw new Error('Không thể xáo bài và rút bài. Vui lòng thử lại.');\r\n    }\r\n  };\r\n  \r\n  // Tạo kết quả phân tích bài từ các lá bài đã rút\r\n  const generateReadingResult = (drawnCards, userQuestion) => {\r\n    try {\r\n      let resultText = '';\r\n      \r\n      // Tạo phần mở đầu\r\n      if (userQuestion) {\r\n        resultText += `Dựa trên câu hỏi của bạn: \"${userQuestion}\"\\n\\n`;\r\n      }\r\n      \r\n      // Thêm phần giới thiệu chung về trải bài\r\n      switch (spreadType) {\r\n        case 'three-card':\r\n          resultText += `Trải bài Ba Lá (Quá khứ, Hiện tại, Tương lai) cho thấy:\\n\\n`;\r\n          resultText += `Quá khứ (${drawnCards[0]?.name}): ${drawnCards[0]?.isReversed ? drawnCards[0]?.reversedMeaning : drawnCards[0]?.meaning}\\n\\n`;\r\n          resultText += `Hiện tại (${drawnCards[1]?.name}): ${drawnCards[1]?.isReversed ? drawnCards[1]?.reversedMeaning : drawnCards[1]?.meaning}\\n\\n`;\r\n          resultText += `Tương lai (${drawnCards[2]?.name}): ${drawnCards[2]?.isReversed ? drawnCards[2]?.reversedMeaning : drawnCards[2]?.meaning}\\n\\n`;\r\n          break;\r\n          \r\n        case 'celtic-cross':\r\n          resultText += `Trải bài Celtic Cross là một trải bài phức tạp với 10 lá bài, phân tích sâu về tình huống của bạn:\\n\\n`;\r\n          // Thêm phân tích cho từng vị trí trong Celtic Cross\r\n          resultText += `1. Tình trạng hiện tại (${drawnCards[0]?.name}): ${drawnCards[0]?.isReversed ? drawnCards[0]?.reversedMeaning : drawnCards[0]?.meaning}\\n\\n`;\r\n          resultText += `2. Thách thức (${drawnCards[1]?.name}): ${drawnCards[1]?.isReversed ? drawnCards[1]?.reversedMeaning : drawnCards[1]?.meaning}\\n\\n`;\r\n          // Thêm các vị trí còn lại...\r\n          break;\r\n          \r\n        case 'love':\r\n          resultText += `Trải bài Tình Yêu cho thấy:\\n\\n`;\r\n          resultText += `Bạn (${drawnCards[0]?.name}): ${drawnCards[0]?.isReversed ? drawnCards[0]?.reversedMeaning : drawnCards[0]?.meaning}\\n\\n`;\r\n          resultText += `Đối phương (${drawnCards[1]?.name}): ${drawnCards[1]?.isReversed ? drawnCards[1]?.reversedMeaning : drawnCards[1]?.meaning}\\n\\n`;\r\n          resultText += `Mối quan hệ hiện tại (${drawnCards[2]?.name}): ${drawnCards[2]?.isReversed ? drawnCards[2]?.reversedMeaning : drawnCards[2]?.meaning}\\n\\n`;\r\n          // Thêm các vị trí còn lại...\r\n          break;\r\n          \r\n        case 'career':\r\n          resultText += `Trải bài Sự Nghiệp cho thấy:\\n\\n`;\r\n          resultText += `Tình hình hiện tại (${drawnCards[0]?.name}): ${drawnCards[0]?.isReversed ? drawnCards[0]?.reversedMeaning : drawnCards[0]?.meaning}\\n\\n`;\r\n          resultText += `Thách thức (${drawnCards[1]?.name}): ${drawnCards[1]?.isReversed ? drawnCards[1]?.reversedMeaning : drawnCards[1]?.meaning}\\n\\n`;\r\n          // Thêm các vị trí còn lại...\r\n          break;\r\n          \r\n        default:\r\n          resultText += `Các lá bài trong trải bài của bạn:\\n\\n`;\r\n          drawnCards.forEach((card, index) => {\r\n            resultText += `Lá ${index + 1} (${card.name}): ${card.isReversed ? card.reversedMeaning : card.meaning}\\n\\n`;\r\n          });\r\n      }\r\n      \r\n      // Thêm lời kết\r\n      resultText += `Tóm lại: Trải bài này gợi ý rằng bạn đang trải qua một giai đoạn chuyển tiếp quan trọng. Hãy lắng nghe trực giác của mình và suy ngẫm về những thông điệp mà các lá bài đã mang đến.`;\r\n      \r\n      return resultText;\r\n    } catch (err) {\r\n      console.error('Error generating reading result:', err);\r\n      return 'Không thể tạo kết quả trải bài. Vui lòng thử lại.';\r\n    }\r\n  };\r\n  \r\n  // Bắt đầu trải bài\r\n  const startReading = async (formData) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      // Cập nhật state từ formData\r\n      if (formData.spreadType) {\r\n        setSpreadType(formData.spreadType);\r\n      }\r\n      \r\n      if (formData.question !== undefined) {\r\n        setQuestion(formData.question);\r\n      }\r\n      \r\n      // Xáo bài và rút bài\r\n      const drawnCards = shuffleAndDrawCards();\r\n      \r\n      // Mô phỏng độ trễ mạng\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      // Tạo kết quả phân tích\r\n      const resultText = generateReadingResult(drawnCards, formData.question);\r\n      \r\n      // Cập nhật state\r\n      setCards(drawnCards);\r\n      setResult(resultText);\r\n      \r\n    } catch (err) {\r\n      console.error('Error starting reading:', err);\r\n      setError(err.message || 'Không thể trải bài. Vui lòng thử lại.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Reset trải bài\r\n  const resetReading = () => {\r\n    setCards([]);\r\n    setResult(null);\r\n    setError(null);\r\n    // Giữ nguyên spreadType và question để tiện cho lần trải bài tiếp theo\r\n  };\r\n  \r\n  return {\r\n    cards,\r\n    isLoading,\r\n    error,\r\n    spreadType,\r\n    question,\r\n    result,\r\n    startReading,\r\n    resetReading\r\n  };\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport AppLayout from '../../../shared/layouts/AppLayout';\r\nimport TarotReadingForm from '../components/TarotReadingForm';\r\nimport TarotSpread from '../components/TarotSpread';\r\nimport TarotCard from '../components/TarotCard';\r\nimport TarotReadingResult from '../components/TarotReadingResult';\r\nimport LoadingSpinner from '../../../shared/components/LoadingSpinner';\r\nimport { useTarotReading } from '../hooks/useTarotReading';\r\n\r\n/**\r\n * Trang trải bài Tarot\r\n */\r\nconst TarotReadingPage = () => {\r\n  const { spreadType: spreadTypeParam } = useParams();\r\n  const navigate = useNavigate();\r\n  const [selectedCardIndex, setSelectedCardIndex] = useState(null);\r\n  const [isReadingComplete, setIsReadingComplete] = useState(false);\r\n  const { \r\n    cards, \r\n    isLoading, \r\n    error, \r\n    spreadType, \r\n    question,\r\n    result,\r\n    startReading,\r\n    resetReading \r\n  } = useTarotReading(spreadTypeParam);\r\n  \r\n  // Kiểm tra URL tham số\r\n  useEffect(() => {\r\n    if (spreadTypeParam && !['three-card', 'celtic-cross', 'love', 'career'].includes(spreadTypeParam)) {\r\n      navigate('/tarot-readings');\r\n    }\r\n  }, [spreadTypeParam, navigate]);\r\n  \r\n  // Xử lý khi submit form\r\n  const handleFormSubmit = (formData) => {\r\n    startReading(formData);\r\n  };\r\n  \r\n  // Xử lý khi click vào lá bài\r\n  const handleCardClick = (card, index) => {\r\n    setSelectedCardIndex(index);\r\n  };\r\n  \r\n  // Xử lý khi thực hiện trải bài mới\r\n  const handleNewReading = () => {\r\n    resetReading();\r\n    setSelectedCardIndex(null);\r\n    setIsReadingComplete(false);\r\n  };\r\n  \r\n  // Xử lý khi hoàn thành trải bài\r\n  const handleCompleteReading = () => {\r\n    setIsReadingComplete(true);\r\n  };\r\n  \r\n  // Render theo trạng thái trải bài\r\n  const renderContent = () => {\r\n    // Đang loading\r\n    if (isLoading) {\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center py-12\">\r\n          <LoadingSpinner size=\"large\" />\r\n          <p className=\"mt-4 text-white/80 text-lg\">Đang trải bài...</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Có lỗi\r\n    if (error) {\r\n      return (\r\n        <div className=\"bg-red-500/20 border border-red-500/50 rounded-lg p-4 text-white text-center\">\r\n          <p className=\"font-medium\">Có lỗi xảy ra</p>\r\n          <p className=\"text-sm\">{error}</p>\r\n          <button\r\n            onClick={handleNewReading}\r\n            className=\"mt-4 bg-white/20 hover:bg-white/30 text-white px-4 py-2 rounded-lg transition-colors\"\r\n          >\r\n            Thử lại\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Chưa trải bài (hiển thị form)\r\n    if (!cards.length) {\r\n      return (\r\n        <div className=\"max-w-3xl mx-auto\">\r\n          <TarotReadingForm\r\n            onSubmit={handleFormSubmit}\r\n            initialSpreadType={spreadTypeParam}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Đã trải bài (hiển thị kết quả)\r\n    return (\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        {/* Phần trải bài */}\r\n        <div className=\"mb-16\">\r\n          <TarotSpread\r\n            cards={cards}\r\n            spreadType={spreadType}\r\n            onCardClick={handleCardClick}\r\n            selectedCardIndex={selectedCardIndex}\r\n          />\r\n        </div>\r\n        \r\n        {/* Phần thông tin lá bài được chọn */}\r\n        {selectedCardIndex !== null && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.4 }}\r\n            className=\"mb-16\"\r\n          >\r\n            <div className=\"bg-white/5 backdrop-blur-sm border border-purple-900/20 rounded-xl p-6 md:p-8\">\r\n              <div className=\"flex flex-col md:flex-row items-center md:items-start gap-8\">\r\n                <div className=\"md:w-1/4 flex-shrink-0\">\r\n                  <TarotCard\r\n                    card={cards[selectedCardIndex]}\r\n                    isFlipped={true}\r\n                    size=\"large\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"md:w-3/4\">\r\n                  <h3 className=\"text-2xl font-bold text-white mb-2 tracking-tight\">\r\n                    {cards[selectedCardIndex].name}\r\n                    {cards[selectedCardIndex].isReversed && ' (Ngược)'}\r\n                  </h3>\r\n                  \r\n                  <div className=\"mb-4 flex flex-wrap gap-2\">\r\n                    <span className=\"text-xs bg-[#9370db]/20 text-[#9370db] px-2 py-1 rounded\">\r\n                      {cards[selectedCardIndex].suit || 'Major Arcana'}\r\n                    </span>\r\n                    {cards[selectedCardIndex].keywords?.map((keyword, i) => (\r\n                      <span key={i} className=\"text-xs bg-white/10 text-white/80 px-2 py-1 rounded\">\r\n                        {keyword}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  <div className=\"mb-6\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-2 tracking-tight\">Ý nghĩa</h4>\r\n                    <p className=\"text-gray-300 tracking-tight\">\r\n                      {cards[selectedCardIndex].isReversed \r\n                        ? cards[selectedCardIndex].reversedMeaning || 'Chưa có thông tin ý nghĩa ngược.' \r\n                        : cards[selectedCardIndex].meaning || 'Chưa có thông tin ý nghĩa.'}\r\n                    </p>\r\n                  </div>\r\n                  \r\n                  {cards[selectedCardIndex].advice && (\r\n                    <div>\r\n                      <h4 className=\"text-lg font-medium text-white mb-2 tracking-tight\">Lời khuyên</h4>\r\n                      <p className=\"text-gray-300 tracking-tight\">\r\n                        {cards[selectedCardIndex].advice}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n        \r\n        {/* Nút hiển thị kết quả AI hoặc kết quả AI */}\r\n        {!isReadingComplete ? (\r\n          <div className=\"text-center mb-16\">\r\n            <button\r\n              onClick={handleCompleteReading}\r\n              className=\"px-6 py-3 bg-gradient-to-r from-[#9370db] to-[#8a2be2] text-white rounded-lg font-medium hover:shadow-lg transition-shadow\"\r\n            >\r\n              Xem Giải Thích Trải Bài\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.4 }}\r\n            className=\"mb-16\"\r\n          >\r\n            <TarotReadingResult \r\n              cards={cards}\r\n              spreadType={spreadType}\r\n              question={question}\r\n              result={result}\r\n            />\r\n          </motion.div>\r\n        )}\r\n        \r\n        {/* Nút trải bài mới */}\r\n        <div className=\"text-center mb-16\">\r\n          <button\r\n            onClick={handleNewReading}\r\n            className=\"px-6 py-3 bg-white/10 backdrop-blur-sm border border-purple-900/20 text-white rounded-lg font-medium hover:bg-white/20 transition-colors\"\r\n          >\r\n            Trải Bài Mới\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <AppLayout>\r\n      <div className=\"min-h-screen bg-gradient-to-b from-[#150923] to-[#1b0f30] py-12 px-4\">\r\n        <div className=\"container mx-auto\">\r\n          <motion.h1 \r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n            className=\"text-3xl md:text-4xl font-bold text-white mb-4 tracking-tight text-center\"\r\n          >\r\n            Trải Bài Tarot\r\n          </motion.h1>\r\n          \r\n          <motion.p\r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.1 }}\r\n            className=\"text-gray-300 text-center mb-12 max-w-2xl mx-auto tracking-tight\"\r\n          >\r\n            Khám phá thông điệp từ các lá bài để hiểu rõ hơn về các vấn đề trong cuộc sống của bạn\r\n          </motion.p>\r\n          \r\n          {renderContent()}\r\n        </div>\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default TarotReadingPage; "],"names":["ReadingTypeCard","memo","_ref","type","selected","onClick","icon","description","_jsx","className","id","children","_jsxs","name","TarotReadingForm","_ref2","onStart","readingTypes","isLoading","dispatch","useDispatch","selectedType","setSelectedType","useState","question","setQuestion","showAIQuestion","setShowAIQuestion","error","setError","types","length","cards","motion","div","initial","opacity","y","animate","transition","duration","onSubmit","e","preventDefault","selectedReadingType","find","readingData","readingType","trim","numCards","performReading","console","map","handleQuickStart","disabled","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","height","exit","htmlFor","value","onChange","target","placeholder","rows","propTypes","PropTypes","isRequired","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","withAnimation","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","this","childRef","current","isPresent","parent","offsetParent","parentWidth","HTMLElement","offsetWidth","size","sizeRef","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","PopChild","anchorX","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","card","isFlipped","isSelectable","isSelected","selectedIndex","isHovering","setIsHovering","cardFlipped","setCardFlipped","isReversal","setIsReversal","useEffect","isReversed","small","medium","large","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","rotateY","ease","transformStyle","perspective","backfaceVisibility","transform","imageUrl","src","alt","onError","onerror","handleClick","spreadType","onCardClick","selectedCardIndex","flippedCards","setFlippedCards","cardPositions","setCardPositions","spreadTitle","setSpreadTitle","spreadDescription","setSpreadDescription","cardVariants","delay","positions","title","Array","isArray","flipStates","flipInterval","setInterval","prev","nextIndex","findIndex","flipped","newState","clearInterval","handleCardClick","index","getSpreadLayout","_cardPositions$","_cardPositions$2","_cardPositions$index","_cardPositions$index2","_cardPositions$index3","_cardPositions$index4","variants","TarotCard","position","_cardPositions$index5","_cardPositions$index6","_cardPositions$index7","_cardPositions$index8","_cardPositions$index9","_cardPositions$index10","result","formattedResult","split","line","fillRule","clipRule","rx","ry","tarotCards","nameVi","suit","keywords","meaning","reversedMeaning","advice","useTarotReading","initialSpreadType","arguments","setCards","setIsLoading","setSpreadType","setResult","startReading","async","formData","drawnCards","shuffleAndDrawCards","shuffledCards","sort","cardCount","slice","Promise","resolve","setTimeout","resultText","generateReadingResult","userQuestion","_drawnCards$","_drawnCards$2","_drawnCards$3","_drawnCards$4","_drawnCards$5","_drawnCards$6","_drawnCards$7","_drawnCards$8","_drawnCards$9","_drawnCards$10","_drawnCards$11","_drawnCards$12","_drawnCards$13","_drawnCards$14","_drawnCards$15","_drawnCards$16","_drawnCards$17","_drawnCards$18","_drawnCards$19","_drawnCards$20","_drawnCards$21","_drawnCards$22","_drawnCards$23","_drawnCards$24","_drawnCards$25","_drawnCards$26","_drawnCards$27","_drawnCards$28","_drawnCards$29","_drawnCards$30","_drawnCards$31","_drawnCards$32","_drawnCards$33","_drawnCards$34","_drawnCards$35","_drawnCards$36","_drawnCards$37","_drawnCards$38","_drawnCards$39","_drawnCards$40","message","resetReading","TarotReadingPage","spreadTypeParam","useParams","navigate","useNavigate","setSelectedCardIndex","isReadingComplete","setIsReadingComplete","handleFormSubmit","handleNewReading","handleCompleteReading","AppLayout","h1","p","renderContent","_cards$selectedCardIn","LoadingSpinner","TarotSpread","keyword","TarotReadingResult"],"sourceRoot":""}