{"version":3,"file":"static/js/531.a323fab1.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-utils/dist/es/warn-once.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const warned = new Set();\nfunction hasWarned(message) {\n    return warned.has(message);\n}\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { hasWarned, warnOnce };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                target.tabIndex === null) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.6.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            (name !== \"transform\" || !transformTemplate) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing, statsBuffer, activeAnimations } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations } from 'motion-dom';\nimport { SubscriptionManager, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.6.2\", `Attempting to mix Motion versions ${nextValue.version} with 12.6.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","noop","any","warning","invariant","MotionGlobalConfig","memo","callback","result","undefined","progress","from","to","value","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","a","b","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","Set","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","getVelocity","resolveVariantFromProps","props","definition","custom","current","variants","resolveVariant","getProps","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","animations","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","step","schedule","queue","delete","process","frameData","frameloop","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","microtask","cancelMicrotask","queueMicrotask","clearTime","newTime","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","element","HTMLElement","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tagName","tabIndex","activeAnimations","layout","mainThread","waapi","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","angle","atan2","rebaseAngle","matrix2dParsers","atan","sqrt","matrix3dParsers","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","trim","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","createContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","useContext","LayoutGroupContext","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","readTransformValue","computedStyle","SVGVisualElement","updateDimensions","defaultType","getAttribute","motion","createDomVisualElement","useId"],"sourceRoot":""}